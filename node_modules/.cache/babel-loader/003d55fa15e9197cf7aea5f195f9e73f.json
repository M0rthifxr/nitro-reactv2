{"ast":null,"code":"import{GroupPurchasedEvent,GroupSettingsComposer}from'@nitrots/nitro-renderer';import{useEffect,useState}from'react';import{AddEventLinkTracker,RemoveLinkEventTracker,SendMessageComposer,TryVisitRoom}from'../../api';import{useGroup,useMessageEvent}from'../../hooks';import{GroupCreatorView}from'./views/GroupCreatorView';import{GroupInformationStandaloneView}from'./views/GroupInformationStandaloneView';import{GroupManagerView}from'./views/GroupManagerView';import{GroupMembersView}from'./views/GroupMembersView';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const GroupsView=props=>{const[isCreatorVisible,setCreatorVisible]=useState(false);const{}=useGroup();useMessageEvent(GroupPurchasedEvent,event=>{const parser=event.getParser();setCreatorVisible(false);TryVisitRoom(parser.roomId);});useEffect(()=>{const linkTracker={linkReceived:url=>{const parts=url.split('/');if(parts.length<2)return;switch(parts[1]){case'create':setCreatorVisible(true);return;case'manage':if(!parts[2])return;setCreatorVisible(false);SendMessageComposer(new GroupSettingsComposer(Number(parts[2])));return;}},eventUrlPrefix:'groups/'};AddEventLinkTracker(linkTracker);return()=>RemoveLinkEventTracker(linkTracker);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[isCreatorVisible&&/*#__PURE__*/_jsx(GroupCreatorView,{onClose:()=>setCreatorVisible(false)}),!isCreatorVisible&&/*#__PURE__*/_jsx(GroupManagerView,{}),/*#__PURE__*/_jsx(GroupMembersView,{}),/*#__PURE__*/_jsx(GroupInformationStandaloneView,{})]});};","map":null,"metadata":{},"sourceType":"module"}