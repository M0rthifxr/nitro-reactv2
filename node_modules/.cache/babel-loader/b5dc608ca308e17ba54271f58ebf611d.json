{"ast":null,"code":"import{useCallback,useState}from'react';import{GetRoomEngine}from'../../../../api';import{LayoutMiniCameraView}from'../../../../common';import{RoomWidgetThumbnailEvent}from'../../../../events';import{useRoom,useUiEvent}from'../../../../hooks';import{jsx as _jsx}from\"react/jsx-runtime\";export const RoomThumbnailWidgetView=props=>{const[isVisible,setIsVisible]=useState(false);const{roomSession=null}=useRoom();const onNitroEvent=useCallback(event=>{switch(event.type){case RoomWidgetThumbnailEvent.SHOW_THUMBNAIL:setIsVisible(true);return;case RoomWidgetThumbnailEvent.HIDE_THUMBNAIL:setIsVisible(false);return;case RoomWidgetThumbnailEvent.TOGGLE_THUMBNAIL:setIsVisible(value=>!value);return;}},[]);useUiEvent(RoomWidgetThumbnailEvent.SHOW_THUMBNAIL,onNitroEvent);useUiEvent(RoomWidgetThumbnailEvent.HIDE_THUMBNAIL,onNitroEvent);useUiEvent(RoomWidgetThumbnailEvent.TOGGLE_THUMBNAIL,onNitroEvent);const receiveTexture=useCallback(texture=>{GetRoomEngine().saveTextureAsScreenshot(texture,true);setIsVisible(false);},[]);if(!isVisible)return null;return/*#__PURE__*/_jsx(LayoutMiniCameraView,{roomId:roomSession.roomId,textureReceiver:receiveTexture,onClose:()=>setIsVisible(false)});};","map":null,"metadata":{},"sourceType":"module"}