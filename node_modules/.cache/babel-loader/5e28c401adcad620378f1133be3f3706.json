{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\chat-history\\\\ChatHistoryView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\nimport { AddEventLinkTracker, ChatEntryType, LocalizeText, RemoveLinkEventTracker } from '../../api';\nimport { Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\nimport { useChatHistory } from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatHistoryView = props => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const {\n    chatHistory = []\n  } = useChatHistory();\n  const elementRef = useRef(null);\n  const cache = useMemo(() => new CellMeasurerCache({\n    defaultHeight: 25,\n    fixedWidth: true\n  }), []);\n\n  const RowRenderer = props => {\n    const item = chatHistory[props.index];\n    const isDark = props.index % 2 === 0;\n    return /*#__PURE__*/_jsxDEV(CellMeasurer, {\n      cache: cache,\n      columnIndex: 0,\n      parent: props.parent,\n      rowIndex: props.index,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        style: props.style,\n        className: \"p-1\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          variant: \"muted\",\n          children: item.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), item.type === ChatEntryType.TYPE_CHAT && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            pointer: true,\n            noWrap: true,\n            dangerouslySetInnerHTML: {\n              __html: item.name + ':'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textBreak: true,\n            wrap: true,\n            grow: true,\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), item.type === ChatEntryType.TYPE_ROOM_INFO && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon icon-small-room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textBreak: true,\n            wrap: true,\n            grow: true,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, props.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, props.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n\n  const onResize = info => cache.clearAll();\n\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const parts = url.split('/');\n        if (parts.length < 2) return;\n\n        switch (parts[1]) {\n          case 'show':\n            setIsVisible(true);\n            return;\n\n          case 'hide':\n            setIsVisible(false);\n            return;\n\n          case 'toggle':\n            setIsVisible(prevValue => !prevValue);\n            return;\n        }\n      },\n      eventUrlPrefix: 'chat-history/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, []);\n  useEffect(() => {\n    if (elementRef && elementRef.current && isVisible) elementRef.current.scrollToRow(-1);\n  }, [isVisible]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    uniqueKey: \"chat-history\",\n    className: \"nitro-chat-history\",\n    theme: \"primary-slim\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('room.chathistory.button.text'),\n      onCloseClick: event => setIsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      children: /*#__PURE__*/_jsxDEV(AutoSizer, {\n        defaultWidth: 300,\n        defaultHeight: 200,\n        onResize: onResize,\n        children: _ref => {\n          let {\n            height,\n            width\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(List, {\n            ref: elementRef,\n            width: width,\n            height: height,\n            rowCount: chatHistory.length,\n            rowHeight: cache.rowHeight,\n            className: 'chat-history-list',\n            rowRenderer: RowRenderer,\n            deferredMeasurementCache: cache\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatHistoryView, \"mxDxAN/pfLfW7qSQBTST0BeLNgs=\", false, function () {\n  return [useChatHistory];\n});\n\n_c = ChatHistoryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHistoryView\");","map":{"version":3,"names":["useEffect","useMemo","useRef","useState","AutoSizer","CellMeasurer","CellMeasurerCache","List","AddEventLinkTracker","ChatEntryType","LocalizeText","RemoveLinkEventTracker","Flex","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","useChatHistory","ChatHistoryView","props","isVisible","setIsVisible","chatHistory","elementRef","cache","defaultHeight","fixedWidth","RowRenderer","item","index","isDark","parent","style","timestamp","type","TYPE_CHAT","__html","name","message","TYPE_ROOM_INFO","key","onResize","info","clearAll","linkTracker","linkReceived","url","parts","split","length","prevValue","eventUrlPrefix","current","scrollToRow","event","height","width","rowHeight"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/chat-history/ChatHistoryView.tsx"],"sourcesContent":["import { ILinkEventTracker } from '@nitrots/nitro-renderer';\r\nimport { FC, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List, ListRowProps, ListRowRenderer, Size } from 'react-virtualized';\r\nimport { AddEventLinkTracker, ChatEntryType, LocalizeText, RemoveLinkEventTracker } from '../../api';\r\nimport { Flex, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\r\nimport { useChatHistory } from '../../hooks';\r\n\r\nexport const ChatHistoryView: FC<{}> = props =>\r\n{\r\n    const [ isVisible, setIsVisible ] = useState(false);\r\n    const { chatHistory = [] } = useChatHistory();\r\n    const elementRef = useRef<List>(null);\r\n\r\n    const cache = useMemo(() => new CellMeasurerCache({ defaultHeight: 25, fixedWidth: true }), []);\r\n\r\n    const RowRenderer: ListRowRenderer = (props: ListRowProps) =>\r\n    {\r\n        const item = chatHistory[props.index];\r\n\r\n        const isDark = (props.index % 2 === 0);\r\n\r\n        return (\r\n            <CellMeasurer cache={ cache } columnIndex={ 0 } key={ props.key } parent={ props.parent } rowIndex={ props.index }>\r\n                <Flex key={ props.key } style={ props.style } className=\"p-1\" gap={ 1 }>\r\n                    <Text variant=\"muted\">{ item.timestamp }</Text>\r\n                    { (item.type === ChatEntryType.TYPE_CHAT) &&\r\n                        <>\r\n                            <Text pointer noWrap dangerouslySetInnerHTML={ { __html: (item.name + ':') } } />\r\n                            <Text textBreak wrap grow>{ item.message }</Text>\r\n                        </> }\r\n                    { (item.type === ChatEntryType.TYPE_ROOM_INFO) &&\r\n                        <>\r\n                            <i className=\"icon icon-small-room\" />\r\n                            <Text textBreak wrap grow>{ item.name }</Text>\r\n                        </> }\r\n                </Flex>\r\n            </CellMeasurer>\r\n        );\r\n    };\r\n\r\n    const onResize = (info: Size) => cache.clearAll();\r\n\r\n    useEffect(() =>\r\n    {\r\n        const linkTracker: ILinkEventTracker = {\r\n            linkReceived: (url: string) =>\r\n            {\r\n                const parts = url.split('/');\r\n        \r\n                if(parts.length < 2) return;\r\n        \r\n                switch(parts[1])\r\n                {\r\n                    case 'show':\r\n                        setIsVisible(true);\r\n                        return;\r\n                    case 'hide':\r\n                        setIsVisible(false);\r\n                        return;\r\n                    case 'toggle':\r\n                        setIsVisible(prevValue => !prevValue);\r\n                        return;\r\n                }\r\n            },\r\n            eventUrlPrefix: 'chat-history/'\r\n        };\r\n\r\n        AddEventLinkTracker(linkTracker);\r\n\r\n        return () => RemoveLinkEventTracker(linkTracker);\r\n    }, []);\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(elementRef && elementRef.current && isVisible) elementRef.current.scrollToRow(-1);\r\n    }, [ isVisible ]);\r\n\r\n    if(!isVisible) return null;\r\n\r\n    return (\r\n        <NitroCardView uniqueKey=\"chat-history\" className=\"nitro-chat-history\" theme=\"primary-slim\">\r\n            <NitroCardHeaderView headerText={ LocalizeText('room.chathistory.button.text') } onCloseClick={ event => setIsVisible(false) }/>\r\n            <NitroCardContentView>\r\n                <AutoSizer defaultWidth={ 300 } defaultHeight={ 200 } onResize={ onResize }>\r\n                    { ({ height, width }) => \r\n                    {\r\n                        return (\r\n                            <List\r\n                                ref={ elementRef }\r\n                                width={ width }\r\n                                height={ height }\r\n                                rowCount={ chatHistory.length }\r\n                                rowHeight={ cache.rowHeight }\r\n                                className={ 'chat-history-list' }\r\n                                rowRenderer={ RowRenderer }\r\n                                deferredMeasurementCache={ cache } />\r\n                        )\r\n                    } }\r\n                </AutoSizer>\r\n            </NitroCardContentView>\r\n        </NitroCardView>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}