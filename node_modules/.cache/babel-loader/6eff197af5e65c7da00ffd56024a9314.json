{"ast":null,"code":"export default (() => {\n  const intervals = []; // eslint-disable-next-line no-restricted-globals\n\n  self.onmessage = message => {\n    if (!message) return;\n    const data = message.data;\n\n    switch (data.type) {\n      case 'CREATE_INTERVAL':\n        {\n          const id = data.timerId;\n          const time = data.time;\n          const response = data.response;\n          const interval = setInterval(() => postMessage(response), time);\n          intervals.push({\n            id,\n            interval\n          });\n          return;\n        }\n\n      case 'REMOVE_INTERVAL':\n        {\n          const id = data.timerId;\n          const i = 0;\n\n          while (i < intervals.length) {\n            const interval = intervals[i];\n\n            if (interval.id === id) {\n              clearInterval(interval.interval);\n              intervals.splice(i, 1);\n              return;\n            }\n          }\n        }\n    }\n  };\n});","map":{"version":3,"names":["intervals","self","onmessage","message","data","type","id","timerId","time","response","interval","setInterval","postMessage","push","i","length","clearInterval","splice"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/workers/IntervalWebWorker.ts"],"sourcesContent":["export default () =>\r\n{\r\n    const intervals: {\r\n        id: number,\r\n        interval: ReturnType<typeof setInterval>\r\n    }[] = [];\r\n\r\n    // eslint-disable-next-line no-restricted-globals\r\n    self.onmessage = (message: MessageEvent) =>\r\n    {\r\n        if(!message) return;\r\n\r\n        const data: { [index: string]: any } = message.data;\r\n    \r\n        switch(data.type)\r\n        {\r\n            case 'CREATE_INTERVAL': {\r\n                const id = (data.timerId as number);\r\n                const time = (data.time as number);\r\n                const response = (data.response as string);\r\n    \r\n                const interval = setInterval(() => postMessage(response), time);\r\n    \r\n                intervals.push({ id, interval });\r\n                return;\r\n            }\r\n            case 'REMOVE_INTERVAL': {\r\n                const id = (data.timerId as number);\r\n    \r\n                const i = 0;\r\n    \r\n                while(i < intervals.length)\r\n                {\r\n                    const interval = intervals[i];\r\n    \r\n                    if(interval.id === id)\r\n                    {\r\n                        clearInterval(interval.interval);\r\n    \r\n                        intervals.splice(i, 1);\r\n    \r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,gBAAe,MACf;EACI,MAAMA,SAGH,GAAG,EAHN,CADJ,CAMI;;EACAC,IAAI,CAACC,SAAL,GAAkBC,OAAD,IACjB;IACI,IAAG,CAACA,OAAJ,EAAa;IAEb,MAAMC,IAA8B,GAAGD,OAAO,CAACC,IAA/C;;IAEA,QAAOA,IAAI,CAACC,IAAZ;MAEI,KAAK,iBAAL;QAAwB;UACpB,MAAMC,EAAE,GAAIF,IAAI,CAACG,OAAjB;UACA,MAAMC,IAAI,GAAIJ,IAAI,CAACI,IAAnB;UACA,MAAMC,QAAQ,GAAIL,IAAI,CAACK,QAAvB;UAEA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAMC,WAAW,CAACH,QAAD,CAAlB,EAA8BD,IAA9B,CAA5B;UAEAR,SAAS,CAACa,IAAV,CAAe;YAAEP,EAAF;YAAMI;UAAN,CAAf;UACA;QACH;;MACD,KAAK,iBAAL;QAAwB;UACpB,MAAMJ,EAAE,GAAIF,IAAI,CAACG,OAAjB;UAEA,MAAMO,CAAC,GAAG,CAAV;;UAEA,OAAMA,CAAC,GAAGd,SAAS,CAACe,MAApB,EACA;YACI,MAAML,QAAQ,GAAGV,SAAS,CAACc,CAAD,CAA1B;;YAEA,IAAGJ,QAAQ,CAACJ,EAAT,KAAgBA,EAAnB,EACA;cACIU,aAAa,CAACN,QAAQ,CAACA,QAAV,CAAb;cAEAV,SAAS,CAACiB,MAAV,CAAiBH,CAAjB,EAAoB,CAApB;cAEA;YACH;UACJ;QACJ;IA9BL;EAgCH,CAtCD;AAuCH,CA/CD"},"metadata":{},"sourceType":"module"}