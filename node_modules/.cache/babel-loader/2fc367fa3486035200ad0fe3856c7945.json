{"ast":null,"code":"import{RoomChatSettings}from'@nitrots/nitro-renderer';import{useEffect,useRef,useState}from'react';import{AddWorkerEventTracker,DoChatsOverlap,GetConfiguration,RemoveWorkerEventTracker,SendWorkerEvent}from'../../../../api';import{useChatWidget}from'../../../../hooks';import{ChatWidgetMessageView}from'./ChatWidgetMessageView';import{jsx as _jsx}from\"react/jsx-runtime\";let TIMER_TRACKER=0;export const ChatWidgetView=props=>{const[timerId,setTimerId]=useState(TIMER_TRACKER++);const{chatMessages=[],setChatMessages=null,chatSettings=null,getScrollSpeed=6000,removeHiddenChats=null,moveAllChatsUp=null}=useChatWidget();const elementRef=useRef();const checkOverlappingChats=(chat,moved,tempChats)=>{const totalChats=chatMessages.length;if(!totalChats)return;for(let i=totalChats-1;i>=0;i--){const collides=chatMessages[i];if(!collides||chat===collides||tempChats.indexOf(collides)>=0||collides.top+collides.height-moved>chat.top+chat.height)continue;chat.skipMovement=true;if(DoChatsOverlap(chat,collides,-moved,0)){const amount=Math.abs(collides.top+collides.height-chat.top);tempChats.push(collides);collides.top-=amount;collides.skipMovement=true;checkOverlappingChats(collides,amount,tempChats);}}};const makeRoom=chat=>{if(chatSettings.mode===RoomChatSettings.CHAT_MODE_FREE_FLOW){chat.skipMovement=true;checkOverlappingChats(chat,0,[chat]);removeHiddenChats();}else{const lowestPoint=chat.top+chat.height;const requiredSpace=chat.height;const spaceAvailable=elementRef.current.offsetHeight-lowestPoint;const amount=requiredSpace-spaceAvailable;if(spaceAvailable<requiredSpace){chatMessages.forEach(existingChat=>{if(existingChat===chat)return;existingChat.top-=amount;});removeHiddenChats();}}};useEffect(()=>{const resize=function(){let event=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(!elementRef||!elementRef.current)return;const currentHeight=elementRef.current.offsetHeight;const newHeight=Math.round(document.body.offsetHeight*GetConfiguration('chat.viewer.height.percentage'));elementRef.current.style.height=`${newHeight}px`;setChatMessages(prevValue=>{if(prevValue){prevValue.forEach(chat=>chat.top-=currentHeight-newHeight);}return prevValue;});};window.addEventListener('resize',resize);resize();return()=>{window.removeEventListener('resize',resize);};},[setChatMessages]);useEffect(()=>{const workerTracker={workerMessageReceived:message=>{switch(message.type){case'MOVE_CHATS':moveAllChatsUp(15);return;}}};AddWorkerEventTracker(workerTracker);SendWorkerEvent({type:'CREATE_INTERVAL',time:getScrollSpeed,timerId:timerId,response:{type:'MOVE_CHATS'}});return()=>{SendWorkerEvent({type:'REMOVE_INTERVAL',timerId});RemoveWorkerEventTracker(workerTracker);};},[timerId,getScrollSpeed,moveAllChatsUp]);return/*#__PURE__*/_jsx(\"div\",{ref:elementRef,className:\"nitro-chat-widget\",children:chatMessages.map(chat=>/*#__PURE__*/_jsx(ChatWidgetMessageView,{chat:chat,makeRoom:makeRoom,bubbleWidth:chatSettings.weight},chat.id))});};","map":null,"metadata":{},"sourceType":"module"}