{"ast":null,"code":"import{CfhSanctionMessageEvent,CfhTopicsInitEvent,IssueDeletedMessageEvent,IssueInfoMessageEvent,IssuePickFailedMessageEvent,ModeratorActionResultMessageEvent,ModeratorInitMessageEvent,ModeratorToolPreferencesEvent}from'@nitrots/nitro-renderer';import{useState}from'react';import{useBetween}from'use-between';import{NotificationAlertType,PlaySound,SoundNames}from'../../api';import{useMessageEvent}from'../events';import{useNotification}from'../notification';const useModToolsState=()=>{const[settings,setSettings]=useState(null);const[openRooms,setOpenRooms]=useState([]);const[openRoomChatlogs,setOpenRoomChatlogs]=useState([]);const[openUserInfos,setOpenUserInfos]=useState([]);const[openUserChatlogs,setOpenUserChatlogs]=useState([]);const[tickets,setTickets]=useState([]);const[cfhCategories,setCfhCategories]=useState([]);const{simpleAlert=null}=useNotification();const openRoomInfo=roomId=>{if(openRooms.indexOf(roomId)>=0)return;setOpenRooms(prevValue=>[...prevValue,roomId]);};const closeRoomInfo=roomId=>{setOpenRooms(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(roomId);if(existingIndex>=0)newValue.splice(existingIndex);return newValue;});};const toggleRoomInfo=roomId=>{if(openRooms.indexOf(roomId)>=0)closeRoomInfo(roomId);else openRoomInfo(roomId);};const openRoomChatlog=roomId=>{if(openRoomChatlogs.indexOf(roomId)>=0)return;setOpenRoomChatlogs(prevValue=>[...prevValue,roomId]);};const closeRoomChatlog=roomId=>{setOpenRoomChatlogs(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(roomId);if(existingIndex>=0)newValue.splice(existingIndex);return newValue;});};const toggleRoomChatlog=roomId=>{if(openRoomChatlogs.indexOf(roomId)>=0)closeRoomChatlog(roomId);else openRoomChatlog(roomId);};const openUserInfo=userId=>{if(openUserInfos.indexOf(userId)>=0)return;setOpenUserInfos(prevValue=>[...prevValue,userId]);};const closeUserInfo=userId=>{setOpenUserInfos(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(userId);if(existingIndex>=0)newValue.splice(existingIndex);return newValue;});};const toggleUserInfo=userId=>{if(openUserInfos.indexOf(userId)>=0)closeUserInfo(userId);else openUserInfo(userId);};const openUserChatlog=userId=>{if(openUserChatlogs.indexOf(userId)>=0)return;setOpenUserChatlogs(prevValue=>[...prevValue,userId]);};const closeUserChatlog=userId=>{setOpenUserChatlogs(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(userId);if(existingIndex>=0)newValue.splice(existingIndex);return newValue;});};const toggleUserChatlog=userId=>{if(openRoomChatlogs.indexOf(userId)>=0)closeUserChatlog(userId);else openUserChatlog(userId);};useMessageEvent(ModeratorInitMessageEvent,event=>{const parser=event.getParser();const data=parser.data;setSettings(data);setTickets(data.issues);});useMessageEvent(IssueInfoMessageEvent,event=>{const parser=event.getParser();setTickets(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.findIndex(ticket=>ticket.issueId===parser.issueData.issueId);if(existingIndex>=0)newValue[existingIndex]=parser.issueData;else{newValue.push(parser.issueData);PlaySound(SoundNames.MODTOOLS_NEW_TICKET);}return newValue;});});useMessageEvent(ModeratorToolPreferencesEvent,event=>{const parser=event.getParser();});useMessageEvent(IssuePickFailedMessageEvent,event=>{const parser=event.getParser();if(!parser)return;simpleAlert('Failed to pick issue',NotificationAlertType.DEFAULT,null,null,'Error');});useMessageEvent(IssueDeletedMessageEvent,event=>{const parser=event.getParser();setTickets(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.findIndex(ticket=>ticket.issueId===parser.issueId);if(existingIndex>=0)newValue.splice(existingIndex,1);return newValue;});});useMessageEvent(ModeratorActionResultMessageEvent,event=>{const parser=event.getParser();if(parser.success)simpleAlert('Moderation action was successfull',NotificationAlertType.MODERATION,null,null,'Success');else simpleAlert('There was a problem applying tht moderation action',NotificationAlertType.MODERATION,null,null,'Error');});useMessageEvent(CfhTopicsInitEvent,event=>{const parser=event.getParser();setCfhCategories(parser.callForHelpCategories);});useMessageEvent(CfhSanctionMessageEvent,event=>{const parser=event.getParser();// todo: update sanction data\n});return{settings,openRooms,openRoomChatlogs,openUserChatlogs,openUserInfos,cfhCategories,tickets,openRoomInfo,closeRoomInfo,toggleRoomInfo,openRoomChatlog,closeRoomChatlog,toggleRoomChatlog,openUserInfo,closeUserInfo,toggleUserInfo,openUserChatlog,closeUserChatlog,toggleUserChatlog};};export const useModTools=()=>useBetween(useModToolsState);","map":null,"metadata":{},"sourceType":"module"}