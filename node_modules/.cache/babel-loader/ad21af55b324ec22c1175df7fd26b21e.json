{"ast":null,"code":"import{useEffect,useMemo,useRef}from'react';import{Column}from'..';import{GetLocalStorage,SetLocalStorage}from'../../api';import{DraggableWindow,DraggableWindowPosition}from'../draggable-window';import{NitroCardContextProvider}from'./NitroCardContext';import{jsx as _jsx}from\"react/jsx-runtime\";export const NitroCardView=props=>{const{theme='primary',uniqueKey=null,handleSelector='.drag-handler',windowPosition=DraggableWindowPosition.CENTER,disableDrag=false,overflow='hidden',position='relative',gap=0,classNames=[],...rest}=props;const elementRef=useRef();const getClassNames=useMemo(()=>{const newClassNames=['nitro-card','rounded','shadow'];newClassNames.push(`theme-${theme||'primary'}`);if(classNames.length)newClassNames.push(...classNames);return newClassNames;},[theme,classNames]);useEffect(()=>{if(!uniqueKey||!elementRef||!elementRef.current)return;const localStorage=GetLocalStorage(`nitro.windows.${uniqueKey}`);const element=elementRef.current;if(localStorage&&localStorage.size){element.style.width=`${localStorage.size.width}px`;element.style.height=`${localStorage.size.height}px`;}const observer=new ResizeObserver(event=>{const newStorage={...GetLocalStorage(`nitro.windows.${uniqueKey}`)};newStorage.size={width:element.offsetWidth,height:element.offsetHeight};SetLocalStorage(`nitro.windows.${uniqueKey}`,newStorage);});observer.observe(element);return()=>{observer.disconnect();};},[uniqueKey]);return/*#__PURE__*/_jsx(NitroCardContextProvider,{value:{theme},children:/*#__PURE__*/_jsx(DraggableWindow,{uniqueKey:uniqueKey,handleSelector:handleSelector,windowPosition:windowPosition,disableDrag:disableDrag,children:/*#__PURE__*/_jsx(Column,{innerRef:elementRef,overflow:overflow,position:position,gap:gap,classNames:getClassNames,...rest})})});};","map":null,"metadata":{},"sourceType":"module"}