{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\room\\\\RoomView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { DispatchMouseEvent, DispatchTouchEvent, GetNitroInstance } from '../../api';\nimport { Base } from '../../common';\nimport { useRoom } from '../../hooks';\nimport { RoomSpectatorView } from './spectator/RoomSpectatorView';\nimport { RoomWidgetsView } from './widgets/RoomWidgetsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RoomView = props => {\n  _s();\n\n  const {\n    roomSession = null\n  } = useRoom();\n  const elementRef = useRef();\n  useEffect(() => {\n    const canvas = GetNitroInstance().renderer.view;\n    if (!canvas) return;\n\n    canvas.onclick = event => DispatchMouseEvent(event);\n\n    canvas.onmousemove = event => DispatchMouseEvent(event);\n\n    canvas.onmousedown = event => DispatchMouseEvent(event);\n\n    canvas.onmouseup = event => DispatchMouseEvent(event);\n\n    canvas.ontouchstart = event => DispatchTouchEvent(event);\n\n    canvas.ontouchmove = event => DispatchTouchEvent(event);\n\n    canvas.ontouchend = event => DispatchTouchEvent(event);\n\n    canvas.ontouchcancel = event => DispatchTouchEvent(event);\n\n    const element = elementRef.current;\n    if (!element) return;\n    element.appendChild(canvas);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    fit: true,\n    innerRef: elementRef,\n    className: !roomSession && 'd-none',\n    children: roomSession && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RoomWidgetsView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), roomSession.isSpectator && /*#__PURE__*/_jsxDEV(RoomSpectatorView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomView, \"6+h5BthgSE3IZFbHtGrqhYNc3HU=\", false, function () {\n  return [useRoom];\n});\n\n_c = RoomView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomView\");","map":{"version":3,"names":["useEffect","useRef","DispatchMouseEvent","DispatchTouchEvent","GetNitroInstance","Base","useRoom","RoomSpectatorView","RoomWidgetsView","RoomView","props","roomSession","elementRef","canvas","renderer","view","onclick","event","onmousemove","onmousedown","onmouseup","ontouchstart","ontouchmove","ontouchend","ontouchcancel","element","current","appendChild","isSpectator"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/room/RoomView.tsx"],"sourcesContent":["import { FC, useEffect, useRef } from 'react';\r\nimport { DispatchMouseEvent, DispatchTouchEvent, GetNitroInstance } from '../../api';\r\nimport { Base } from '../../common';\r\nimport { useRoom } from '../../hooks';\r\nimport { RoomSpectatorView } from './spectator/RoomSpectatorView';\r\nimport { RoomWidgetsView } from './widgets/RoomWidgetsView';\r\n\r\nexport const RoomView: FC<{}> = props =>\r\n{\r\n    const { roomSession = null } = useRoom();\r\n    const elementRef = useRef<HTMLDivElement>();\r\n\r\n    useEffect(() =>\r\n    {\r\n        const canvas = GetNitroInstance().renderer.view;\r\n\r\n        if(!canvas) return;\r\n\r\n        canvas.onclick = event => DispatchMouseEvent(event);\r\n        canvas.onmousemove = event => DispatchMouseEvent(event);\r\n        canvas.onmousedown = event => DispatchMouseEvent(event);\r\n        canvas.onmouseup = event => DispatchMouseEvent(event);\r\n\r\n        canvas.ontouchstart = event => DispatchTouchEvent(event);\r\n        canvas.ontouchmove = event => DispatchTouchEvent(event);\r\n        canvas.ontouchend = event => DispatchTouchEvent(event);\r\n        canvas.ontouchcancel = event => DispatchTouchEvent(event);\r\n\r\n        const element = elementRef.current;\r\n\r\n        if(!element) return;\r\n        \r\n        element.appendChild(canvas);\r\n    }, []);\r\n\r\n    return (\r\n        <Base fit innerRef={ elementRef } className={ (!roomSession && 'd-none') }>\r\n            { roomSession &&\r\n                <>\r\n                    <RoomWidgetsView />\r\n                    { roomSession.isSpectator && <RoomSpectatorView /> }\r\n                </> }\r\n        </Base>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,SAAaA,SAAb,EAAwBC,MAAxB,QAAsC,OAAtC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,gBAAjD,QAAyE,WAAzE;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,eAAT,QAAgC,2BAAhC;;;AAEA,OAAO,MAAMC,QAAgB,GAAGC,KAAK,IACrC;EAAA;;EACI,MAAM;IAAEC,WAAW,GAAG;EAAhB,IAAyBL,OAAO,EAAtC;EACA,MAAMM,UAAU,GAAGX,MAAM,EAAzB;EAEAD,SAAS,CAAC,MACV;IACI,MAAMa,MAAM,GAAGT,gBAAgB,GAAGU,QAAnB,CAA4BC,IAA3C;IAEA,IAAG,CAACF,MAAJ,EAAY;;IAEZA,MAAM,CAACG,OAAP,GAAiBC,KAAK,IAAIf,kBAAkB,CAACe,KAAD,CAA5C;;IACAJ,MAAM,CAACK,WAAP,GAAqBD,KAAK,IAAIf,kBAAkB,CAACe,KAAD,CAAhD;;IACAJ,MAAM,CAACM,WAAP,GAAqBF,KAAK,IAAIf,kBAAkB,CAACe,KAAD,CAAhD;;IACAJ,MAAM,CAACO,SAAP,GAAmBH,KAAK,IAAIf,kBAAkB,CAACe,KAAD,CAA9C;;IAEAJ,MAAM,CAACQ,YAAP,GAAsBJ,KAAK,IAAId,kBAAkB,CAACc,KAAD,CAAjD;;IACAJ,MAAM,CAACS,WAAP,GAAqBL,KAAK,IAAId,kBAAkB,CAACc,KAAD,CAAhD;;IACAJ,MAAM,CAACU,UAAP,GAAoBN,KAAK,IAAId,kBAAkB,CAACc,KAAD,CAA/C;;IACAJ,MAAM,CAACW,aAAP,GAAuBP,KAAK,IAAId,kBAAkB,CAACc,KAAD,CAAlD;;IAEA,MAAMQ,OAAO,GAAGb,UAAU,CAACc,OAA3B;IAEA,IAAG,CAACD,OAAJ,EAAa;IAEbA,OAAO,CAACE,WAAR,CAAoBd,MAApB;EACH,CArBQ,EAqBN,EArBM,CAAT;EAuBA,oBACI,QAAC,IAAD;IAAM,GAAG,MAAT;IAAU,QAAQ,EAAGD,UAArB;IAAkC,SAAS,EAAI,CAACD,WAAD,IAAgB,QAA/D;IAAA,UACMA,WAAW,iBACT;MAAA,wBACI,QAAC,eAAD;QAAA;QAAA;QAAA;MAAA,QADJ,EAEMA,WAAW,CAACiB,WAAZ,iBAA2B,QAAC,iBAAD;QAAA;QAAA;QAAA;MAAA,QAFjC;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CArCM;;GAAMnB,Q;UAEsBH,O;;;KAFtBG,Q"},"metadata":{},"sourceType":"module"}