{"ast":null,"code":"import{IssueMessageData}from'@nitrots/nitro-renderer';import{useState}from'react';import{GetSessionDataManager}from'../../../../api';import{NitroCardContentView,NitroCardHeaderView,NitroCardTabsItemView,NitroCardTabsView,NitroCardView}from'../../../../common';import{useModTools}from'../../../../hooks';import{ModToolsIssueInfoView}from'./ModToolsIssueInfoView';import{ModToolsMyIssuesTabView}from'./ModToolsMyIssuesTabView';import{ModToolsOpenIssuesTabView}from'./ModToolsOpenIssuesTabView';import{ModToolsPickedIssuesTabView}from'./ModToolsPickedIssuesTabView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const TABS=['Open Issues','My Issues','Picked Issues'];export const ModToolsTicketsView=props=>{const{onCloseClick=null}=props;const[currentTab,setCurrentTab]=useState(0);const[issueInfoWindows,setIssueInfoWindows]=useState([]);const{tickets=[]}=useModTools();const openIssues=tickets.filter(issue=>issue.state===IssueMessageData.STATE_OPEN);const myIssues=tickets.filter(issue=>issue.state===IssueMessageData.STATE_PICKED&&issue.pickerUserId===GetSessionDataManager().userId);const pickedIssues=tickets.filter(issue=>issue.state===IssueMessageData.STATE_PICKED);const closeIssue=issueId=>{setIssueInfoWindows(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(issueId);if(existingIndex>=0)newValue.splice(existingIndex,1);return newValue;});};const handleIssue=issueId=>{setIssueInfoWindows(prevValue=>{const newValue=[...prevValue];const existingIndex=newValue.indexOf(issueId);if(existingIndex===-1)newValue.push(issueId);else newValue.splice(existingIndex,1);return newValue;});};const CurrentTabComponent=()=>{switch(currentTab){case 0:return/*#__PURE__*/_jsx(ModToolsOpenIssuesTabView,{openIssues:openIssues});case 1:return/*#__PURE__*/_jsx(ModToolsMyIssuesTabView,{myIssues:myIssues,handleIssue:handleIssue});case 2:return/*#__PURE__*/_jsx(ModToolsPickedIssuesTabView,{pickedIssues:pickedIssues});}return null;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(NitroCardView,{className:\"nitro-mod-tools-tickets\",children:[/*#__PURE__*/_jsx(NitroCardHeaderView,{headerText:'Tickets',onCloseClick:onCloseClick}),/*#__PURE__*/_jsx(NitroCardTabsView,{children:TABS.map((tab,index)=>{return/*#__PURE__*/_jsx(NitroCardTabsItemView,{isActive:currentTab===index,onClick:event=>setCurrentTab(index),children:tab},index);})}),/*#__PURE__*/_jsx(NitroCardContentView,{gap:1,children:/*#__PURE__*/_jsx(CurrentTabComponent,{})})]}),issueInfoWindows&&issueInfoWindows.length>0&&issueInfoWindows.map(issueId=>/*#__PURE__*/_jsx(ModToolsIssueInfoView,{issueId:issueId,onIssueInfoClosed:closeIssue},issueId))]});};","map":null,"metadata":{},"sourceType":"module"}