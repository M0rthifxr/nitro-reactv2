{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\achievements\\\\AchievementsView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { AchievementUtilities, AddEventLinkTracker, LocalizeText, RemoveLinkEventTracker } from '../../api';\nimport { Base, Column, LayoutImage, LayoutProgressBar, NitroCardContentView, NitroCardHeaderView, NitroCardSubHeaderView, NitroCardView, Text } from '../../common';\nimport { useAchievements } from '../../hooks';\nimport { AchievementCategoryView } from './views/AchievementCategoryView';\nimport { AchievementsCategoryListView } from './views/category-list/AchievementsCategoryListView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AchievementsView = props => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const {\n    achievementCategories = [],\n    selectedCategoryCode = null,\n    setSelectedCategoryCode = null,\n    selectedAchievementId = -1,\n    setSelectedAchievementId = null,\n    achievementScore = 0,\n    getProgress = 0,\n    getMaxProgress = 0,\n    setAchievementSeen = null\n  } = useAchievements();\n  const selectedCategory = useMemo(() => {\n    if (selectedCategoryCode === null) return null;\n    return achievementCategories.find(category => category.code === selectedCategoryCode);\n  }, [achievementCategories, selectedCategoryCode]);\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const parts = url.split('/');\n        if (parts.length < 2) return;\n\n        switch (parts[1]) {\n          case 'show':\n            setIsVisible(true);\n            return;\n\n          case 'hide':\n            setIsVisible(false);\n            return;\n\n          case 'toggle':\n            setIsVisible(prevValue => !prevValue);\n            return;\n        }\n      },\n      eventUrlPrefix: 'achievements/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, []);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    uniqueKey: \"achievements\",\n    className: \"nitro-achievements\",\n    theme: \"primary-slim\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('inventory.achievements'),\n      onCloseClick: event => setIsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(NitroCardSubHeaderView, {\n      position: \"relative\",\n      className: \"justify-content-center align-items-center cursor-pointer\",\n      gap: 3,\n      children: [/*#__PURE__*/_jsxDEV(Base, {\n        onClick: event => setSelectedCategoryCode(null),\n        className: \"nitro-achievements-back-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        grow: true,\n        gap: 0,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 4,\n          fontWeight: \"bold\",\n          className: \"text-small\",\n          children: LocalizeText(`quests.${selectedCategory.code}.name`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: LocalizeText('achievements.details.categoryprogress', ['progress', 'limit'], [selectedCategory.getProgress().toString(), selectedCategory.getMaxProgress().toString()])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LayoutImage, {\n        imageUrl: AchievementUtilities.getAchievementCategoryImageUrl(selectedCategory, null, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      gap: 1,\n      children: [!selectedCategory && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AchievementsCategoryListView, {\n          categories: achievementCategories,\n          selectedCategoryCode: selectedCategoryCode,\n          setSelectedCategoryCode: setSelectedCategoryCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          grow: true,\n          justifyContent: \"end\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            center: true,\n            children: LocalizeText('achievements.categories.score', ['score'], [achievementScore.toString()])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(LayoutProgressBar, {\n            text: LocalizeText('achievements.categories.totalprogress', ['progress', 'limit'], [getProgress.toString(), getMaxProgress.toString()]),\n            progress: getProgress,\n            maxProgress: getMaxProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), selectedCategory && /*#__PURE__*/_jsxDEV(AchievementCategoryView, {\n        category: selectedCategory,\n        selectedAchievementId: selectedAchievementId,\n        setSelectedAchievementId: setSelectedAchievementId,\n        setAchievementSeen: setAchievementSeen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AchievementsView, \"1U5QLXalSeqj8VjvcHyXK/stg/0=\", false, function () {\n  return [useAchievements];\n});\n\n_c = AchievementsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementsView\");","map":{"version":3,"names":["useEffect","useMemo","useState","AchievementUtilities","AddEventLinkTracker","LocalizeText","RemoveLinkEventTracker","Base","Column","LayoutImage","LayoutProgressBar","NitroCardContentView","NitroCardHeaderView","NitroCardSubHeaderView","NitroCardView","Text","useAchievements","AchievementCategoryView","AchievementsCategoryListView","AchievementsView","props","isVisible","setIsVisible","achievementCategories","selectedCategoryCode","setSelectedCategoryCode","selectedAchievementId","setSelectedAchievementId","achievementScore","getProgress","getMaxProgress","setAchievementSeen","selectedCategory","find","category","code","linkTracker","linkReceived","url","parts","split","length","prevValue","eventUrlPrefix","event","toString","getAchievementCategoryImageUrl"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/achievements/AchievementsView.tsx"],"sourcesContent":["import { ILinkEventTracker } from '@nitrots/nitro-renderer';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\nimport { AchievementUtilities, AddEventLinkTracker, LocalizeText, RemoveLinkEventTracker } from '../../api';\r\nimport { Base, Column, LayoutImage, LayoutProgressBar, NitroCardContentView, NitroCardHeaderView, NitroCardSubHeaderView, NitroCardView, Text } from '../../common';\r\nimport { useAchievements } from '../../hooks';\r\nimport { AchievementCategoryView } from './views/AchievementCategoryView';\r\nimport { AchievementsCategoryListView } from './views/category-list/AchievementsCategoryListView';\r\n\r\nexport const AchievementsView: FC<{}> = props =>\r\n{\r\n    const [ isVisible, setIsVisible ] = useState(false);\r\n    const { achievementCategories = [], selectedCategoryCode = null, setSelectedCategoryCode = null, selectedAchievementId = -1, setSelectedAchievementId = null, achievementScore = 0, getProgress = 0, getMaxProgress = 0, setAchievementSeen = null } = useAchievements();\r\n\r\n    const selectedCategory = useMemo(() =>\r\n    {\r\n        if(selectedCategoryCode === null) return null;\r\n\r\n        return achievementCategories.find(category => (category.code === selectedCategoryCode));\r\n    }, [ achievementCategories, selectedCategoryCode ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const linkTracker: ILinkEventTracker = {\r\n            linkReceived: (url: string) =>\r\n            {\r\n                const parts = url.split('/');\r\n        \r\n                if(parts.length < 2) return;\r\n        \r\n                switch(parts[1])\r\n                {\r\n                    case 'show':\r\n                        setIsVisible(true);\r\n                        return;\r\n                    case 'hide':\r\n                        setIsVisible(false);\r\n                        return;\r\n                    case 'toggle':\r\n                        setIsVisible(prevValue => !prevValue);\r\n                        return;\r\n                }\r\n            },\r\n            eventUrlPrefix: 'achievements/'\r\n        };\r\n\r\n        AddEventLinkTracker(linkTracker);\r\n\r\n        return () => RemoveLinkEventTracker(linkTracker);\r\n    }, []);\r\n\r\n    if(!isVisible) return null;\r\n\r\n    return (\r\n        <NitroCardView uniqueKey=\"achievements\" className=\"nitro-achievements\" theme=\"primary-slim\">\r\n            <NitroCardHeaderView headerText={ LocalizeText('inventory.achievements') } onCloseClick={ event => setIsVisible(false) } />\r\n            { selectedCategory &&\r\n                <NitroCardSubHeaderView position=\"relative\" className=\"justify-content-center align-items-center cursor-pointer\" gap={ 3 }>\r\n                    <Base onClick={ event => setSelectedCategoryCode(null) } className=\"nitro-achievements-back-arrow\" />\r\n                    <Column grow gap={ 0 }>\r\n                        <Text fontSize={ 4 } fontWeight=\"bold\" className=\"text-small\">{ LocalizeText(`quests.${ selectedCategory.code }.name`) }</Text>\r\n                        <Text>{ LocalizeText('achievements.details.categoryprogress', [ 'progress', 'limit' ], [ selectedCategory.getProgress().toString(), selectedCategory.getMaxProgress().toString() ]) }</Text>\r\n                    </Column>\r\n                    <LayoutImage imageUrl={ AchievementUtilities.getAchievementCategoryImageUrl(selectedCategory, null,true) } />\r\n                </NitroCardSubHeaderView> }\r\n            <NitroCardContentView gap={ 1 }>\r\n                { !selectedCategory &&\r\n                    <>\r\n                        <AchievementsCategoryListView categories={ achievementCategories } selectedCategoryCode={ selectedCategoryCode } setSelectedCategoryCode={ setSelectedCategoryCode } />\r\n                        <Column grow justifyContent=\"end\" gap={ 1 }>\r\n                            <Text small center>{ LocalizeText('achievements.categories.score', [ 'score' ], [ achievementScore.toString() ]) }</Text>\r\n                            <LayoutProgressBar text={ LocalizeText('achievements.categories.totalprogress', [ 'progress', 'limit' ], [ getProgress.toString(), getMaxProgress.toString() ]) } progress={ getProgress } maxProgress={ getMaxProgress } />\r\n                        </Column>\r\n                    </> }\r\n                { selectedCategory &&\r\n                    <AchievementCategoryView category={ selectedCategory } selectedAchievementId={ selectedAchievementId } setSelectedAchievementId={ setSelectedAchievementId } setAchievementSeen={ setAchievementSeen } /> }\r\n            </NitroCardContentView>\r\n        </NitroCardView>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}