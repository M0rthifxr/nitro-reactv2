{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { ConfigurationEvent, HabboWebTools, LegacyExternalInterface, Nitro, NitroCommunicationDemoEvent, NitroEvent, NitroLocalizationEvent, NitroVersion, RoomEngineEvent, WebGL } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { DispatchUiEvent, GetCommunication, GetConfiguration, GetNitroInstance, GetUIVersion } from './api';\nimport { Base, TransitionAnimation, TransitionAnimationTypes } from './common';\nimport { LoadingView } from './components/loading/LoadingView';\nimport { MainView } from './components/main/MainView';\nimport { useConfigurationEvent, useLocalizationEvent, useMainEvent, useRoomEngineEvent } from './hooks';\nimport IntervalWebWorker from './workers/IntervalWebWorker';\nimport { WorkerBuilder } from './workers/WorkerBuilder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNitroVersion.UI_VERSION = GetUIVersion();\nexport const App = props => {\n  _s();\n\n  const [isReady, setIsReady] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('Getting Ready');\n  const [percent, setPercent] = useState(0);\n  const [imageRendering, setImageRendering] = useState(true);\n\n  if (!GetNitroInstance()) {\n    //@ts-ignore\n    if (!NitroConfig) throw new Error('NitroConfig is not defined!');\n    Nitro.bootstrap();\n    const worker = new WorkerBuilder(IntervalWebWorker);\n    Nitro.instance.setWorker(worker);\n  }\n\n  const handler = useCallback(event => {\n    switch (event.type) {\n      case ConfigurationEvent.LOADED:\n        GetNitroInstance().localization.init();\n        setPercent(prevValue => prevValue + 20);\n        return;\n\n      case ConfigurationEvent.FAILED:\n        setIsError(true);\n        setMessage('Configuration Failed');\n        return;\n\n      case Nitro.WEBGL_UNAVAILABLE:\n        setIsError(true);\n        setMessage('WebGL Required');\n        return;\n\n      case Nitro.WEBGL_CONTEXT_LOST:\n        setIsError(true);\n        setMessage('WebGL Context Lost - Reloading');\n        setTimeout(() => window.location.reload(), 1500);\n        return;\n\n      case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING:\n        setPercent(prevValue => prevValue + 20);\n        return;\n\n      case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED:\n        setIsError(true);\n        setMessage('Handshake Failed');\n        return;\n\n      case NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED:\n        setPercent(prevValue => prevValue + 20);\n        GetNitroInstance().init();\n        if (LegacyExternalInterface.available) LegacyExternalInterface.call('legacyTrack', 'authentication', 'authok', []);\n        return;\n\n      case NitroCommunicationDemoEvent.CONNECTION_ERROR:\n        setIsError(true);\n        setMessage('Connection Error');\n        return;\n\n      case NitroCommunicationDemoEvent.CONNECTION_CLOSED:\n        //if(GetNitroInstance().roomEngine) GetNitroInstance().roomEngine.dispose();\n        //setIsError(true);\n        setMessage('Connection Error');\n        HabboWebTools.send(-1, 'client.init.handshake.fail');\n        return;\n\n      case RoomEngineEvent.ENGINE_INITIALIZED:\n        setPercent(prevValue => prevValue + 20);\n        setTimeout(() => setIsReady(true), 300);\n        return;\n\n      case NitroLocalizationEvent.LOADED:\n        {\n          const assetUrls = GetConfiguration('preload.assets.urls');\n          const urls = [];\n          if (assetUrls && assetUrls.length) for (const url of assetUrls) urls.push(GetNitroInstance().core.configuration.interpolate(url));\n          GetNitroInstance().core.asset.downloadAssets(urls, status => {\n            if (status) {\n              GetCommunication().init();\n              setPercent(prevValue => prevValue + 20);\n            } else {\n              setIsError(true);\n              setMessage('Assets Failed');\n            }\n          });\n          return;\n        }\n    }\n  }, []);\n  useMainEvent(Nitro.WEBGL_UNAVAILABLE, handler);\n  useMainEvent(Nitro.WEBGL_CONTEXT_LOST, handler);\n  useMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING, handler);\n  useMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED, handler);\n  useMainEvent(NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED, handler);\n  useMainEvent(NitroCommunicationDemoEvent.CONNECTION_ERROR, handler);\n  useMainEvent(NitroCommunicationDemoEvent.CONNECTION_CLOSED, handler);\n  useRoomEngineEvent(RoomEngineEvent.ENGINE_INITIALIZED, handler);\n  useLocalizationEvent(NitroLocalizationEvent.LOADED, handler);\n  useConfigurationEvent(ConfigurationEvent.LOADED, handler);\n  useConfigurationEvent(ConfigurationEvent.FAILED, handler);\n  useEffect(() => {\n    if (!WebGL.isWebGLAvailable()) {\n      DispatchUiEvent(new NitroEvent(Nitro.WEBGL_UNAVAILABLE));\n    } else {\n      GetNitroInstance().core.configuration.init();\n    }\n\n    const resize = event => setImageRendering(!(window.devicePixelRatio % 1));\n\n    window.addEventListener('resize', resize);\n    resize(null);\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    fit: true,\n    overflow: \"hidden\",\n    className: imageRendering && 'image-rendering-pixelated',\n    children: [(!isReady || isError) && /*#__PURE__*/_jsxDEV(LoadingView, {\n      isError: isError,\n      message: message,\n      percent: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TransitionAnimation, {\n      type: TransitionAnimationTypes.FADE_IN,\n      inProp: isReady,\n      children: /*#__PURE__*/_jsxDEV(MainView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Base, {\n      id: \"draggable-windows-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"l0cWT0k3SokTdKIFoprl0jpL0F0=\", false, function () {\n  return [useMainEvent, useMainEvent, useMainEvent, useMainEvent, useMainEvent, useMainEvent, useMainEvent, useRoomEngineEvent, useLocalizationEvent, useConfigurationEvent, useConfigurationEvent];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ConfigurationEvent","HabboWebTools","LegacyExternalInterface","Nitro","NitroCommunicationDemoEvent","NitroEvent","NitroLocalizationEvent","NitroVersion","RoomEngineEvent","WebGL","useCallback","useEffect","useState","DispatchUiEvent","GetCommunication","GetConfiguration","GetNitroInstance","GetUIVersion","Base","TransitionAnimation","TransitionAnimationTypes","LoadingView","MainView","useConfigurationEvent","useLocalizationEvent","useMainEvent","useRoomEngineEvent","IntervalWebWorker","WorkerBuilder","UI_VERSION","App","props","isReady","setIsReady","isError","setIsError","message","setMessage","percent","setPercent","imageRendering","setImageRendering","NitroConfig","Error","bootstrap","worker","instance","setWorker","handler","event","type","LOADED","localization","init","prevValue","FAILED","WEBGL_UNAVAILABLE","WEBGL_CONTEXT_LOST","setTimeout","window","location","reload","CONNECTION_HANDSHAKING","CONNECTION_HANDSHAKE_FAILED","CONNECTION_AUTHENTICATED","available","call","CONNECTION_ERROR","CONNECTION_CLOSED","send","ENGINE_INITIALIZED","assetUrls","urls","length","url","push","core","configuration","interpolate","asset","downloadAssets","status","isWebGLAvailable","resize","devicePixelRatio","addEventListener","removeEventListener","FADE_IN"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/App.tsx"],"sourcesContent":["import { ConfigurationEvent, HabboWebTools, LegacyExternalInterface, Nitro, NitroCommunicationDemoEvent, NitroEvent, NitroLocalizationEvent, NitroVersion, RoomEngineEvent, WebGL } from '@nitrots/nitro-renderer';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { DispatchUiEvent, GetCommunication, GetConfiguration, GetNitroInstance, GetUIVersion } from './api';\r\nimport { Base, TransitionAnimation, TransitionAnimationTypes } from './common';\r\nimport { LoadingView } from './components/loading/LoadingView';\r\nimport { MainView } from './components/main/MainView';\r\nimport { useConfigurationEvent, useLocalizationEvent, useMainEvent, useRoomEngineEvent } from './hooks';\r\nimport IntervalWebWorker from './workers/IntervalWebWorker';\r\nimport { WorkerBuilder } from './workers/WorkerBuilder';\r\n\r\nNitroVersion.UI_VERSION = GetUIVersion();\r\n\r\nexport const App: FC<{}> = props =>\r\n{\r\n    const [ isReady, setIsReady ] = useState(false);\r\n    const [ isError, setIsError ] = useState(false);\r\n    const [ message, setMessage ] = useState('Getting Ready');\r\n    const [ percent, setPercent ] = useState(0);\r\n    const [ imageRendering, setImageRendering ] = useState<boolean>(true);\r\n\r\n    if(!GetNitroInstance())\r\n    {\r\n        //@ts-ignore\r\n        if(!NitroConfig) throw new Error('NitroConfig is not defined!');\r\n\r\n        Nitro.bootstrap();\r\n\r\n        const worker = new WorkerBuilder(IntervalWebWorker);\r\n\r\n        Nitro.instance.setWorker(worker);\r\n    }\r\n\r\n    const handler = useCallback((event: NitroEvent) =>\r\n    {\r\n        switch(event.type)\r\n        {\r\n            case ConfigurationEvent.LOADED:\r\n                GetNitroInstance().localization.init();\r\n                setPercent(prevValue => (prevValue + 20));\r\n                return;\r\n            case ConfigurationEvent.FAILED:\r\n                setIsError(true);\r\n                setMessage('Configuration Failed');\r\n                return;\r\n            case Nitro.WEBGL_UNAVAILABLE:\r\n                setIsError(true);\r\n                setMessage('WebGL Required');\r\n                return;\r\n            case Nitro.WEBGL_CONTEXT_LOST:\r\n                setIsError(true);\r\n                setMessage('WebGL Context Lost - Reloading');\r\n\r\n                setTimeout(() => window.location.reload(), 1500);\r\n                return;\r\n            case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING:\r\n                setPercent(prevValue => (prevValue + 20));\r\n                return;\r\n            case NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED:\r\n                setIsError(true);\r\n                setMessage('Handshake Failed');\r\n                return;\r\n            case NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED:\r\n                setPercent(prevValue => (prevValue + 20));\r\n\r\n                GetNitroInstance().init();\r\n\r\n                if(LegacyExternalInterface.available) LegacyExternalInterface.call('legacyTrack', 'authentication', 'authok', []);\r\n                return;\r\n            case NitroCommunicationDemoEvent.CONNECTION_ERROR:\r\n                setIsError(true);\r\n                setMessage('Connection Error');\r\n                return;\r\n            case NitroCommunicationDemoEvent.CONNECTION_CLOSED:\r\n                //if(GetNitroInstance().roomEngine) GetNitroInstance().roomEngine.dispose();\r\n                //setIsError(true);\r\n                setMessage('Connection Error');\r\n\r\n                HabboWebTools.send(-1, 'client.init.handshake.fail');\r\n                return;\r\n            case RoomEngineEvent.ENGINE_INITIALIZED:\r\n                setPercent(prevValue => (prevValue + 20));\r\n\r\n                setTimeout(() => setIsReady(true), 300);\r\n                return;\r\n            case NitroLocalizationEvent.LOADED: {\r\n                const assetUrls = GetConfiguration<string[]>('preload.assets.urls');\r\n                const urls: string[] = [];\r\n\r\n                if(assetUrls && assetUrls.length) for(const url of assetUrls) urls.push(GetNitroInstance().core.configuration.interpolate(url));\r\n\r\n                GetNitroInstance().core.asset.downloadAssets(urls, (status: boolean) =>\r\n                {\r\n                    if(status)\r\n                    {\r\n                        GetCommunication().init();\r\n\r\n                        setPercent(prevValue => (prevValue + 20))\r\n                    }\r\n                    else\r\n                    {\r\n                        setIsError(true);\r\n                        setMessage('Assets Failed');\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useMainEvent(Nitro.WEBGL_UNAVAILABLE, handler);\r\n    useMainEvent(Nitro.WEBGL_CONTEXT_LOST, handler);\r\n    useMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING, handler);\r\n    useMainEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED, handler);\r\n    useMainEvent(NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED, handler);\r\n    useMainEvent(NitroCommunicationDemoEvent.CONNECTION_ERROR, handler);\r\n    useMainEvent(NitroCommunicationDemoEvent.CONNECTION_CLOSED, handler);\r\n    useRoomEngineEvent(RoomEngineEvent.ENGINE_INITIALIZED, handler);\r\n    useLocalizationEvent(NitroLocalizationEvent.LOADED, handler);\r\n    useConfigurationEvent(ConfigurationEvent.LOADED, handler);\r\n    useConfigurationEvent(ConfigurationEvent.FAILED, handler);\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(!WebGL.isWebGLAvailable())\r\n        {\r\n            DispatchUiEvent(new NitroEvent(Nitro.WEBGL_UNAVAILABLE));\r\n        }\r\n        else\r\n        {\r\n            GetNitroInstance().core.configuration.init();\r\n        }\r\n    \r\n        const resize = (event: UIEvent) => setImageRendering(!(window.devicePixelRatio % 1));\r\n\r\n        window.addEventListener('resize', resize);\r\n\r\n        resize(null);\r\n\r\n        return () =>\r\n        {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <Base fit overflow=\"hidden\" className={ imageRendering && 'image-rendering-pixelated' }>\r\n            { (!isReady || isError) &&\r\n                <LoadingView isError={ isError } message={ message } percent={ percent } /> }\r\n            <TransitionAnimation type={ TransitionAnimationTypes.FADE_IN } inProp={ (isReady) }>\r\n                <MainView />\r\n            </TransitionAnimation>\r\n            <Base id=\"draggable-windows-container\" />\r\n        </Base>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}