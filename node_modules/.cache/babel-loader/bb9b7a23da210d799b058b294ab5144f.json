{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\catalog\\\\CatalogView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { AddEventLinkTracker, GetConfiguration, LocalizeText, RemoveLinkEventTracker } from '../../api';\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardTabsItemView, NitroCardTabsView, NitroCardView } from '../../common';\nimport { useCatalog } from '../../hooks';\nimport { CatalogIconView } from './views/catalog-icon/CatalogIconView';\nimport { CatalogGiftView } from './views/gift/CatalogGiftView';\nimport { CatalogNavigationView } from './views/navigation/CatalogNavigationView';\nimport { GetCatalogLayout } from './views/page/layout/GetCatalogLayout';\nimport { MarketplacePostOfferView } from './views/page/layout/marketplace/MarketplacePostOfferView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CatalogView = props => {\n  _s();\n\n  const {\n    isVisible = false,\n    setIsVisible = null,\n    rootNode = null,\n    currentPage = null,\n    navigationHidden = false,\n    setNavigationHidden = null,\n    activeNodes = [],\n    searchResult = null,\n    setSearchResult = null,\n    openPageByName = null,\n    openPageByOfferId = null,\n    activateNode = null,\n    getNodeById\n  } = useCatalog();\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const parts = url.split('/');\n        if (parts.length < 2) return;\n\n        switch (parts[1]) {\n          case 'show':\n            setIsVisible(true);\n            return;\n\n          case 'hide':\n            setIsVisible(false);\n            return;\n\n          case 'toggle':\n            setIsVisible(prevValue => !prevValue);\n            return;\n\n          case 'open':\n            if (parts.length > 2) {\n              if (parts.length === 4) {\n                switch (parts[2]) {\n                  case 'offerId':\n                    openPageByOfferId(parseInt(parts[3]));\n                    return;\n                }\n              } else {\n                openPageByName(parts[2]);\n              }\n            } else {\n              setIsVisible(true);\n            }\n\n            return;\n        }\n      },\n      eventUrlPrefix: 'catalog/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, [setIsVisible, openPageByOfferId, openPageByName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isVisible && /*#__PURE__*/_jsxDEV(NitroCardView, {\n      uniqueKey: \"catalog\",\n      className: \"nitro-catalog\",\n      style: {\n        width: GetConfiguration('catalog.headers') ? '710px' : ''\n      },\n      children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n        headerText: LocalizeText('catalog.title'),\n        onCloseClick: event => setIsVisible(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NitroCardTabsView, {\n        children: rootNode && rootNode.children.length > 0 && rootNode.children.map(child => {\n          if (!child.isVisible) return null;\n          return /*#__PURE__*/_jsxDEV(NitroCardTabsItemView, {\n            isActive: child.isActive,\n            onClick: event => {\n              if (searchResult) setSearchResult(null);\n              activateNode(child);\n            },\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              gap: GetConfiguration('catalog.tab.icons') ? 1 : 0,\n              alignItems: \"center\",\n              children: [GetConfiguration('catalog.tab.icons') && /*#__PURE__*/_jsxDEV(CatalogIconView, {\n                icon: child.iconId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 84\n              }, this), child.localization]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)\n          }, child.pageId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [!navigationHidden && /*#__PURE__*/_jsxDEV(Column, {\n            size: 3,\n            overflow: \"hidden\",\n            children: activeNodes && activeNodes.length > 0 && /*#__PURE__*/_jsxDEV(CatalogNavigationView, {\n              node: activeNodes[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            size: !navigationHidden ? 9 : 12,\n            overflow: \"hidden\",\n            children: GetCatalogLayout(currentPage, () => setNavigationHidden(true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CatalogGiftView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MarketplacePostOfferView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CatalogView, \"vq26DCVBes9iZtPpqtHgANgT6nY=\", false, function () {\n  return [useCatalog];\n});\n\n_c = CatalogView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogView\");","map":{"version":3,"names":["useEffect","AddEventLinkTracker","GetConfiguration","LocalizeText","RemoveLinkEventTracker","Column","Flex","Grid","NitroCardContentView","NitroCardHeaderView","NitroCardTabsItemView","NitroCardTabsView","NitroCardView","useCatalog","CatalogIconView","CatalogGiftView","CatalogNavigationView","GetCatalogLayout","MarketplacePostOfferView","CatalogView","props","isVisible","setIsVisible","rootNode","currentPage","navigationHidden","setNavigationHidden","activeNodes","searchResult","setSearchResult","openPageByName","openPageByOfferId","activateNode","getNodeById","linkTracker","linkReceived","url","parts","split","length","prevValue","parseInt","eventUrlPrefix","width","event","children","map","child","isActive","iconId","localization","pageId"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/catalog/CatalogView.tsx"],"sourcesContent":["import { ILinkEventTracker } from '@nitrots/nitro-renderer';\r\nimport { FC, useEffect } from 'react';\r\nimport { AddEventLinkTracker, GetConfiguration, LocalizeText, RemoveLinkEventTracker } from '../../api';\r\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardTabsItemView, NitroCardTabsView, NitroCardView } from '../../common';\r\nimport { useCatalog } from '../../hooks';\r\nimport { CatalogIconView } from './views/catalog-icon/CatalogIconView';\r\nimport { CatalogGiftView } from './views/gift/CatalogGiftView';\r\nimport { CatalogNavigationView } from './views/navigation/CatalogNavigationView';\r\nimport { GetCatalogLayout } from './views/page/layout/GetCatalogLayout';\r\nimport { MarketplacePostOfferView } from './views/page/layout/marketplace/MarketplacePostOfferView';\r\n\r\nexport const CatalogView: FC<{}> = props =>\r\n{\r\n    const { isVisible = false, setIsVisible = null, rootNode = null, currentPage = null, navigationHidden = false, setNavigationHidden = null, activeNodes = [], searchResult = null, setSearchResult = null, openPageByName = null, openPageByOfferId = null, activateNode = null, getNodeById } = useCatalog();\r\n\r\n    useEffect(() =>\r\n    {\r\n        const linkTracker: ILinkEventTracker = {\r\n            linkReceived: (url: string) =>\r\n            {\r\n                const parts = url.split('/');\r\n        \r\n                if(parts.length < 2) return;\r\n        \r\n                switch(parts[1])\r\n                {\r\n                    case 'show':\r\n                        setIsVisible(true);\r\n                        return;\r\n                    case 'hide':\r\n                        setIsVisible(false);\r\n                        return;\r\n                    case 'toggle':\r\n                        setIsVisible(prevValue => !prevValue);\r\n                        return;\r\n                    case 'open':\r\n                        if(parts.length > 2)\r\n                        {\r\n                            if(parts.length === 4)\r\n                            {\r\n                                switch(parts[2])\r\n                                {\r\n                                    case 'offerId':\r\n                                        openPageByOfferId(parseInt(parts[3]));\r\n                                        return;\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                openPageByName(parts[2]);\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            setIsVisible(true);\r\n                        }\r\n        \r\n                        return;\r\n                }\r\n            },\r\n            eventUrlPrefix: 'catalog/'\r\n        };\r\n\r\n        AddEventLinkTracker(linkTracker);\r\n\r\n        return () => RemoveLinkEventTracker(linkTracker);\r\n    }, [ setIsVisible, openPageByOfferId, openPageByName ]);\r\n\r\n    return (\r\n        <>\r\n            { isVisible &&\r\n                <NitroCardView uniqueKey=\"catalog\" className=\"nitro-catalog\" style={ { width: GetConfiguration('catalog.headers') ? '710px' : '' } }>\r\n                    <NitroCardHeaderView headerText={ LocalizeText('catalog.title') } onCloseClick={ event => setIsVisible(false) } />\r\n                    <NitroCardTabsView>\r\n                        { rootNode && (rootNode.children.length > 0) && rootNode.children.map(child =>\r\n                        {\r\n                            if(!child.isVisible) return null;\r\n\r\n                            return (\r\n                                <NitroCardTabsItemView key={ child.pageId } isActive={ child.isActive } onClick={ event =>\r\n                                {\r\n                                    if(searchResult) setSearchResult(null);\r\n\r\n                                    activateNode(child);\r\n                                } } >\r\n                                    <Flex gap={ GetConfiguration('catalog.tab.icons') ? 1 : 0 } alignItems=\"center\">\r\n                                        { GetConfiguration('catalog.tab.icons') && <CatalogIconView icon={ child.iconId } /> }\r\n                                        { child.localization }\r\n                                    </Flex>\r\n                                </NitroCardTabsItemView>\r\n                            );\r\n                        }) }\r\n                    </NitroCardTabsView>\r\n                    <NitroCardContentView>\r\n                        <Grid>\r\n                            { !navigationHidden &&\r\n                                <Column size={ 3 } overflow=\"hidden\">\r\n                                    { activeNodes && (activeNodes.length > 0) &&\r\n                                        <CatalogNavigationView node={ activeNodes[0] } /> }\r\n                                </Column> }\r\n                            <Column size={ !navigationHidden ? 9 : 12 } overflow=\"hidden\">\r\n                                { GetCatalogLayout(currentPage, () => setNavigationHidden(true)) }\r\n                            </Column>\r\n                        </Grid>\r\n                    </NitroCardContentView>\r\n                </NitroCardView> }\r\n            <CatalogGiftView />\r\n            <MarketplacePostOfferView />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}