{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\user-profile\\\\UserProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport { RelationshipStatusInfoEvent, RoomEngineObjectEvent, RoomObjectCategory, RoomObjectType, UserCurrentBadgesComposer, UserCurrentBadgesEvent, UserProfileEvent, UserRelationshipsComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useState } from 'react';\nimport { CreateLinkEvent, GetRoomSession, GetSessionDataManager, GetUserProfile, LocalizeText, SendMessageComposer } from '../../api';\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\nimport { useMessageEvent, useRoomEngineEvent } from '../../hooks';\nimport { BadgesContainerView } from './views/BadgesContainerView';\nimport { FriendsContainerView } from './views/FriendsContainerView';\nimport { GroupsContainerView } from './views/GroupsContainerView';\nimport { UserContainerView } from './views/UserContainerView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserProfileView = props => {\n  _s();\n\n  const [userProfile, setUserProfile] = useState(null);\n  const [userBadges, setUserBadges] = useState([]);\n  const [userRelationships, setUserRelationships] = useState(null);\n\n  const onClose = () => {\n    setUserProfile(null);\n    setUserBadges([]);\n    setUserRelationships(null);\n  };\n\n  const onLeaveGroup = useCallback(() => {\n    if (!userProfile || userProfile.id !== GetSessionDataManager().userId) return;\n    GetUserProfile(userProfile.id);\n  }, [userProfile]);\n  useMessageEvent(UserCurrentBadgesEvent, event => {\n    const parser = event.getParser();\n    if (!userProfile || parser.userId !== userProfile.id) return;\n    setUserBadges(parser.badges);\n  });\n  useMessageEvent(RelationshipStatusInfoEvent, event => {\n    const parser = event.getParser();\n    if (!userProfile || parser.userId !== userProfile.id) return;\n    setUserRelationships(parser);\n  });\n  useMessageEvent(UserProfileEvent, event => {\n    const parser = event.getParser();\n    let isSameProfile = false;\n    setUserProfile(prevValue => {\n      if (prevValue && prevValue.id) isSameProfile = prevValue.id === parser.id;\n      return parser;\n    });\n\n    if (!isSameProfile) {\n      setUserBadges([]);\n      setUserRelationships(null);\n    }\n\n    SendMessageComposer(new UserCurrentBadgesComposer(parser.id));\n    SendMessageComposer(new UserRelationshipsComposer(parser.id));\n  });\n  useRoomEngineEvent(RoomEngineObjectEvent.SELECTED, event => {\n    if (!userProfile) return;\n    if (event.category !== RoomObjectCategory.UNIT) return;\n    const userData = GetRoomSession().userDataManager.getUserDataByIndex(event.objectId);\n    if (userData.type !== RoomObjectType.USER) return;\n    GetUserProfile(userData.webID);\n  });\n  if (!userProfile) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    uniqueKey: \"nitro-user-profile\",\n    theme: \"primary-slim\",\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: LocalizeText('extendedprofile.caption'),\n      onCloseClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        fullHeight: false,\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          size: 7,\n          gap: 1,\n          className: \"user-container pe-2\",\n          children: [/*#__PURE__*/_jsxDEV(UserContainerView, {\n            userProfile: userProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            columnCount: 5,\n            fullHeight: true,\n            className: \"bg-muted rounded px-2 py-1\",\n            children: /*#__PURE__*/_jsxDEV(BadgesContainerView, {\n              fullWidth: true,\n              center: true,\n              badges: userBadges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          size: 5,\n          children: userRelationships && /*#__PURE__*/_jsxDEV(FriendsContainerView, {\n            relationships: userRelationships,\n            friendsCount: userProfile.friendsCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        className: \"rooms-button-container px-2 py-1\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          gap: 1,\n          onClick: event => CreateLinkEvent(`navigator/search/hotel_view/owner:${userProfile.username}`),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon icon-rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            underline: true,\n            pointer: true,\n            children: LocalizeText('extendedprofile.rooms')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GroupsContainerView, {\n        fullWidth: true,\n        itsMe: userProfile.id === GetSessionDataManager().userId,\n        groups: userProfile.groups,\n        onLeaveGroup: onLeaveGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfileView, \"OexejGdvuBeFApqfysF3uBffbsw=\", false, function () {\n  return [useMessageEvent, useMessageEvent, useMessageEvent, useRoomEngineEvent];\n});\n\n_c = UserProfileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileView\");","map":{"version":3,"names":["RelationshipStatusInfoEvent","RoomEngineObjectEvent","RoomObjectCategory","RoomObjectType","UserCurrentBadgesComposer","UserCurrentBadgesEvent","UserProfileEvent","UserRelationshipsComposer","useCallback","useState","CreateLinkEvent","GetRoomSession","GetSessionDataManager","GetUserProfile","LocalizeText","SendMessageComposer","Column","Flex","Grid","NitroCardContentView","NitroCardHeaderView","NitroCardView","Text","useMessageEvent","useRoomEngineEvent","BadgesContainerView","FriendsContainerView","GroupsContainerView","UserContainerView","UserProfileView","props","userProfile","setUserProfile","userBadges","setUserBadges","userRelationships","setUserRelationships","onClose","onLeaveGroup","id","userId","event","parser","getParser","badges","isSameProfile","prevValue","SELECTED","category","UNIT","userData","userDataManager","getUserDataByIndex","objectId","type","USER","webID","friendsCount","username","groups"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/user-profile/UserProfileView.tsx"],"sourcesContent":["import { RelationshipStatusInfoEvent, RelationshipStatusInfoMessageParser, RoomEngineObjectEvent, RoomObjectCategory, RoomObjectType, UserCurrentBadgesComposer, UserCurrentBadgesEvent, UserProfileEvent, UserProfileParser, UserRelationshipsComposer } from '@nitrots/nitro-renderer';\r\nimport { FC, useCallback, useState } from 'react';\r\nimport { CreateLinkEvent, GetRoomSession, GetSessionDataManager, GetUserProfile, LocalizeText, SendMessageComposer } from '../../api';\r\nimport { Column, Flex, Grid, NitroCardContentView, NitroCardHeaderView, NitroCardView, Text } from '../../common';\r\nimport { useMessageEvent, useRoomEngineEvent } from '../../hooks';\r\nimport { BadgesContainerView } from './views/BadgesContainerView';\r\nimport { FriendsContainerView } from './views/FriendsContainerView';\r\nimport { GroupsContainerView } from './views/GroupsContainerView';\r\nimport { UserContainerView } from './views/UserContainerView';\r\n\r\nexport const UserProfileView: FC<{}> = props =>\r\n{\r\n    const [ userProfile, setUserProfile ] = useState<UserProfileParser>(null);\r\n    const [ userBadges, setUserBadges ] = useState<string[]>([]);\r\n    const [ userRelationships, setUserRelationships ] = useState<RelationshipStatusInfoMessageParser>(null);\r\n\r\n    const onClose = () =>\r\n    {\r\n        setUserProfile(null);\r\n        setUserBadges([]);\r\n        setUserRelationships(null);\r\n    }\r\n\r\n    const onLeaveGroup = useCallback(() =>\r\n    {\r\n        if(!userProfile || (userProfile.id !== GetSessionDataManager().userId)) return;\r\n        \r\n        GetUserProfile(userProfile.id);\r\n    }, [ userProfile ]);\r\n\r\n    useMessageEvent<UserCurrentBadgesEvent>(UserCurrentBadgesEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!userProfile || (parser.userId !== userProfile.id)) return;\r\n        \r\n        setUserBadges(parser.badges);\r\n    });\r\n\r\n    useMessageEvent<RelationshipStatusInfoEvent>(RelationshipStatusInfoEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!userProfile || (parser.userId !== userProfile.id)) return;\r\n        \r\n        setUserRelationships(parser);\r\n    });\r\n\r\n    useMessageEvent<UserProfileEvent>(UserProfileEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        let isSameProfile = false;\r\n        \r\n        setUserProfile(prevValue =>\r\n        {\r\n            if(prevValue && prevValue.id) isSameProfile = (prevValue.id === parser.id);\r\n\r\n            return parser;\r\n        });\r\n\r\n        if(!isSameProfile)\r\n        {\r\n            setUserBadges([]);\r\n            setUserRelationships(null);\r\n        }\r\n\r\n        SendMessageComposer(new UserCurrentBadgesComposer(parser.id));\r\n        SendMessageComposer(new UserRelationshipsComposer(parser.id));\r\n    });\r\n\r\n    useRoomEngineEvent<RoomEngineObjectEvent>(RoomEngineObjectEvent.SELECTED, event =>\r\n    {\r\n        if(!userProfile) return;\r\n        \r\n        if(event.category !== RoomObjectCategory.UNIT) return;\r\n\r\n        const userData = GetRoomSession().userDataManager.getUserDataByIndex(event.objectId);\r\n\r\n        if(userData.type !== RoomObjectType.USER) return;\r\n\r\n        GetUserProfile(userData.webID);\r\n    });\r\n\r\n    if(!userProfile) return null;\r\n\r\n    return (\r\n        <NitroCardView uniqueKey=\"nitro-user-profile\" theme=\"primary-slim\" className=\"user-profile\">\r\n            <NitroCardHeaderView headerText={ LocalizeText('extendedprofile.caption') } onCloseClick={ onClose } />\r\n            <NitroCardContentView overflow=\"hidden\">\r\n                <Grid fullHeight={ false } gap={ 2 }>\r\n                    <Column size={ 7 } gap={ 1 } className=\"user-container pe-2\">\r\n                        <UserContainerView userProfile={ userProfile } />\r\n                        <Grid columnCount={ 5 } fullHeight className=\"bg-muted rounded px-2 py-1\">\r\n                            <BadgesContainerView fullWidth center badges={ userBadges } />\r\n                        </Grid>\r\n                    </Column>\r\n                    <Column size={ 5 }>\r\n                        { userRelationships &&\r\n                            <FriendsContainerView relationships={ userRelationships } friendsCount={ userProfile.friendsCount } /> }\r\n                    </Column>\r\n                </Grid>\r\n                <Flex alignItems=\"center\" className=\"rooms-button-container px-2 py-1\">\r\n                    <Flex alignItems=\"center\" gap={ 1 } onClick={ event => CreateLinkEvent(`navigator/search/hotel_view/owner:${ userProfile.username }`) }>\r\n                        <i className=\"icon icon-rooms\" />\r\n                        <Text bold underline pointer>{ LocalizeText('extendedprofile.rooms') }</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <GroupsContainerView fullWidth itsMe={ userProfile.id === GetSessionDataManager().userId } groups={ userProfile.groups } onLeaveGroup={ onLeaveGroup } />\r\n            </NitroCardContentView>\r\n        </NitroCardView>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}