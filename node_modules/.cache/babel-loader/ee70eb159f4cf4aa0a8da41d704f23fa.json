{"ast":null,"code":"import{AchievementNotificationMessageEvent,ActivityPointNotificationMessageEvent,ClubGiftNotificationEvent,ClubGiftSelectedEvent,HabboBroadcastMessageEvent,HotelClosedAndOpensEvent,HotelClosesAndWillOpenAtEvent,HotelWillCloseInMinutesEvent,InfoFeedEnableMessageEvent,MaintenanceStatusMessageEvent,ModeratorCautionEvent,ModeratorMessageEvent,MOTDNotificationEvent,NotificationDialogMessageEvent,PetLevelNotificationEvent,PetReceivedMessageEvent,RespectReceivedEvent,RoomEnterEffect,RoomEnterEvent,UserBannedMessageEvent,Vector3d}from'@nitrots/nitro-renderer';import{useCallback,useState}from'react';import{useBetween}from'use-between';import{GetConfiguration,GetNitroInstance,GetRoomEngine,GetSessionDataManager,LocalizeBadgeName,LocalizeText,NotificationAlertItem,NotificationAlertType,NotificationBubbleItem,NotificationBubbleType,NotificationConfirmItem,PlaySound,ProductImageUtility,TradingNotificationType}from'../../api';import{useMessageEvent}from'../events';const cleanText=text=>text&&text.length?text.replace(/\\\\r/g,'\\r'):'';const getTimeZeroPadded=time=>{const text='0'+time;return text.substr(text.length-2,text.length);};let modDisclaimerTimeout=null;const useNotificationState=()=>{const[alerts,setAlerts]=useState([]);const[bubbleAlerts,setBubbleAlerts]=useState([]);const[confirms,setConfirms]=useState([]);const[bubblesDisabled,setBubblesDisabled]=useState(false);const[modDisclaimerShown,setModDisclaimerShown]=useState(false);const getMainNotificationConfig=()=>GetConfiguration('notification',{});const getNotificationConfig=key=>{const mainConfig=getMainNotificationConfig();if(!mainConfig)return null;return mainConfig[key];};const getNotificationPart=(options,type,key,localize)=>{if(options.has(key))return options.get(key);const localizeKey=['notification',type,key].join('.');if(GetNitroInstance().localization.hasValue(localizeKey)||localize)return LocalizeText(localizeKey,Array.from(options.keys()),Array.from(options.values()));return null;};const getNotificationImageUrl=(options,type)=>{let imageUrl=options.get('image');if(!imageUrl)imageUrl=GetConfiguration('image.library.notifications.url','').replace('%image%',type.replace(/\\./g,'_'));return LocalizeText(imageUrl);};const simpleAlert=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let clickUrl=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let clickUrlText=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let title=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;let imageUrl=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;if(!title||!title.length)title=LocalizeText('notifications.broadcast.title');if(!type||!type.length)type=NotificationAlertType.DEFAULT;const alertItem=new NotificationAlertItem([cleanText(message)],type,clickUrl,clickUrlText,title,imageUrl);setAlerts(prevValue=>[alertItem,...prevValue]);},[]);const showNitroAlert=useCallback(()=>simpleAlert(null,NotificationAlertType.NITRO),[simpleAlert]);const showSingleBubble=useCallback(function(message,type){let imageUrl=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let internalLink=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(bubblesDisabled)return;const notificationItem=new NotificationBubbleItem(message,type,imageUrl,internalLink);setBubbleAlerts(prevValue=>[notificationItem,...prevValue]);},[bubblesDisabled]);const showNotification=function(type){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!options)options=new Map();const configuration=getNotificationConfig('notification.'+type);if(configuration)for(const key in configuration)options.set(key,configuration[key]);const title=getNotificationPart(options,type,'title',true);const message=getNotificationPart(options,type,'message',true).replace(/\\\\r/g,'\\r');const linkTitle=getNotificationPart(options,type,'linkTitle',false);const linkUrl=getNotificationPart(options,type,'linkUrl',false);const image=getNotificationImageUrl(options,type);if(options.get('display')==='BUBBLE'){showSingleBubble(LocalizeText(message),NotificationBubbleType.INFO,image,linkUrl);}else{simpleAlert(message,type,linkUrl,linkTitle,title,image);}if(options.get('sound'))PlaySound(options.get('sound'));};const showConfirm=useCallback(function(message,onConfirm,onCancel){let confirmText=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let cancelText=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;let title=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;let type=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;if(!confirmText||!confirmText.length)confirmText=LocalizeText('generic.confirm');if(!cancelText||!cancelText.length)cancelText=LocalizeText('generic.cancel');if(!title||!title.length)title=LocalizeText('notifications.broadcast.title');const confirmItem=new NotificationConfirmItem(type,message,onConfirm,onCancel,confirmText,cancelText,title);setConfirms(prevValue=>[confirmItem,...prevValue]);},[]);const showModeratorMessage=function(message){let url=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let showHabboWay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;simpleAlert(message,NotificationAlertType.DEFAULT,url,LocalizeText('mod.alert.link'),LocalizeText('mod.alert.title'));};const showTradeAlert=useCallback(function(type){let otherUsername=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';switch(type){case TradingNotificationType.ALERT_SCAM:simpleAlert(LocalizeText('inventory.trading.warning.other_not_offering'),null,null,null,LocalizeText('inventory.trading.notification.title'));return;case TradingNotificationType.HOTEL_TRADING_DISABLED:case TradingNotificationType.YOU_NOT_ALLOWED:case TradingNotificationType.THEY_NOT_ALLOWED:case TradingNotificationType.ROOM_DISABLED:case TradingNotificationType.YOU_OPEN:case TradingNotificationType.THEY_OPEN:simpleAlert(LocalizeText(`inventory.trading.openfail.${type}`,['otherusername'],[otherUsername]),null,null,null,LocalizeText('inventory.trading.openfail.title'));return;case TradingNotificationType.ERROR_WHILE_COMMIT:simpleAlert(`${LocalizeText('inventory.trading.notification.caption')}, ${LocalizeText('inventory.trading.notification.commiterror.info')}`,null,null,null,LocalizeText('inventory.trading.notification.title'));return;case TradingNotificationType.THEY_CANCELLED:simpleAlert(LocalizeText('inventory.trading.info.closed'),null,null,null,LocalizeText('inventory.trading.notification.title'));return;}},[simpleAlert]);const closeAlert=useCallback(alert=>{setAlerts(prevValue=>{const newAlerts=[...prevValue];const index=newAlerts.findIndex(value=>alert===value);if(index>=0)newAlerts.splice(index,1);return newAlerts;});},[]);const closeBubbleAlert=useCallback(item=>{setBubbleAlerts(prevValue=>{const newAlerts=[...prevValue];const index=newAlerts.findIndex(value=>item===value);if(index>=0)newAlerts.splice(index,1);return newAlerts;});},[]);const closeConfirm=useCallback(item=>{setConfirms(prevValue=>{const newConfirms=[...prevValue];const index=newConfirms.findIndex(value=>item===value);if(index>=0)newConfirms.splice(index,1);return newConfirms;});},[]);useMessageEvent(RespectReceivedEvent,event=>{const parser=event.getParser();if(parser.userId!==GetSessionDataManager().userId)return;const text1=LocalizeText('notifications.text.respect.1');const text2=LocalizeText('notifications.text.respect.2',['count'],[parser.respectsReceived.toString()]);showSingleBubble(text1,NotificationBubbleType.RESPECT);showSingleBubble(text2,NotificationBubbleType.RESPECT);});useMessageEvent(HabboBroadcastMessageEvent,event=>{const parser=event.getParser();simpleAlert(parser.message.replace(/\\\\r/g,'\\r'),null,null,LocalizeText('notifications.broadcast.title'));});useMessageEvent(AchievementNotificationMessageEvent,event=>{const parser=event.getParser();const text1=LocalizeText('achievements.levelup.desc');const badgeName=LocalizeBadgeName(parser.data.badgeCode);const badgeImage=GetSessionDataManager().getBadgeUrl(parser.data.badgeCode);const internalLink='questengine/achievements/'+parser.data.category;showSingleBubble(text1+' '+badgeName,NotificationBubbleType.ACHIEVEMENT,badgeImage,internalLink);});useMessageEvent(ClubGiftNotificationEvent,event=>{const parser=event.getParser();if(parser.numGifts<=0)return;showSingleBubble(parser.numGifts.toString(),NotificationBubbleType.CLUBGIFT,null,'catalog/open/'+GetConfiguration('catalog.links')['hc.hc_gifts']);});useMessageEvent(ModeratorMessageEvent,event=>{const parser=event.getParser();showModeratorMessage(parser.message,parser.url,false);});useMessageEvent(ActivityPointNotificationMessageEvent,event=>{const parser=event.getParser();if(parser.amountChanged<=0||parser.type!==5)return;const imageUrl=GetConfiguration('currency.asset.icon.url','').replace('%type%',parser.type.toString());showSingleBubble(LocalizeText('notifications.text.loyalty.received',['AMOUNT'],[parser.amountChanged.toString()]),NotificationBubbleType.INFO,imageUrl);});useMessageEvent(UserBannedMessageEvent,event=>{const parser=event.getParser();showModeratorMessage(parser.message);});useMessageEvent(HotelClosesAndWillOpenAtEvent,event=>{const parser=event.getParser();simpleAlert(LocalizeText('opening.hours.'+(parser.userThrowOutAtClose?'disconnected':'closed'),['h','m'],[getTimeZeroPadded(parser.openHour),getTimeZeroPadded(parser.openMinute)]),NotificationAlertType.DEFAULT,null,null,LocalizeText('opening.hours.title'));});useMessageEvent(PetReceivedMessageEvent,event=>{const parser=event.getParser();const text=LocalizeText('notifications.text.'+(parser.boughtAsGift?'petbought':'petreceived'));let imageUrl=null;const imageResult=GetRoomEngine().getRoomObjectPetImage(parser.pet.typeId,parser.pet.paletteId,parseInt(parser.pet.color,16),new Vector3d(45*3),64,null,true);if(imageResult)imageUrl=imageResult.getImage().src;showSingleBubble(text,NotificationBubbleType.PETLEVEL,imageUrl);});useMessageEvent(MOTDNotificationEvent,event=>{const parser=event.getParser();const messages=parser.messages.map(message=>cleanText(message));const alertItem=new NotificationAlertItem(messages,NotificationAlertType.MOTD,null,null,LocalizeText('notifications.motd.title'));setAlerts(prevValue=>[alertItem,...prevValue]);});useMessageEvent(PetLevelNotificationEvent,event=>{const parser=event.getParser();let imageUrl=null;const imageResult=GetRoomEngine().getRoomObjectPetImage(parser.figureData.typeId,parser.figureData.paletteId,parseInt(parser.figureData.color,16),new Vector3d(45*3),64,null,true);if(imageResult)imageUrl=imageResult.getImage().src;showSingleBubble(LocalizeText('notifications.text.petlevel',['pet_name','level'],[parser.petName,parser.level.toString()]),NotificationBubbleType.PETLEVEL,imageUrl);});useMessageEvent(InfoFeedEnableMessageEvent,event=>{const parser=event.getParser();setBubblesDisabled(!parser.enabled);});useMessageEvent(ClubGiftSelectedEvent,event=>{const parser=event.getParser();if(!parser.products||!parser.products.length)return;const productData=parser.products[0];if(!productData)return;showSingleBubble(LocalizeText('notifications.text.club_gift.selected'),NotificationBubbleType.INFO,ProductImageUtility.getProductImageUrl(productData.productType,productData.furniClassId,productData.extraParam));});useMessageEvent(MaintenanceStatusMessageEvent,event=>{const parser=event.getParser();simpleAlert(LocalizeText('maintenance.shutdown',['m','d'],[parser.minutesUntilMaintenance.toString(),parser.duration.toString()]),NotificationAlertType.DEFAULT,null,null,LocalizeText('opening.hours.title'));});useMessageEvent(ModeratorCautionEvent,event=>{const parser=event.getParser();showModeratorMessage(parser.message,parser.url);});useMessageEvent(NotificationDialogMessageEvent,event=>{const parser=event.getParser();showNotification(parser.type,parser.parameters);});useMessageEvent(HotelWillCloseInMinutesEvent,event=>{const parser=event.getParser();simpleAlert(LocalizeText('opening.hours.shutdown',['m'],[parser.openMinute.toString()]),NotificationAlertType.DEFAULT,null,null,LocalizeText('opening.hours.title'));});useMessageEvent(HotelClosedAndOpensEvent,event=>{const parser=event.getParser();simpleAlert(LocalizeText('opening.hours.disconnected',['h','m'],[parser.openHour.toString(),parser.openMinute.toString()]),NotificationAlertType.DEFAULT,null,null,LocalizeText('opening.hours.title'));});const onRoomEnterEvent=useCallback(()=>{if(modDisclaimerShown)return;if(RoomEnterEffect.isRunning()){if(modDisclaimerTimeout)return;modDisclaimerTimeout=setTimeout(()=>{onRoomEnterEvent();},RoomEnterEffect.totalRunningTime+5000);}else{if(modDisclaimerTimeout){clearTimeout(modDisclaimerTimeout);modDisclaimerTimeout=null;}showSingleBubble(LocalizeText('mod.chatdisclaimer'),NotificationBubbleType.INFO);setModDisclaimerShown(true);}},[modDisclaimerShown,showSingleBubble]);useMessageEvent(RoomEnterEvent,onRoomEnterEvent);return{alerts,bubbleAlerts,confirms,simpleAlert,showNitroAlert,showTradeAlert,showConfirm,closeAlert,closeBubbleAlert,closeConfirm};};export const useNotification=()=>useBetween(useNotificationState);","map":null,"metadata":{},"sourceType":"module"}