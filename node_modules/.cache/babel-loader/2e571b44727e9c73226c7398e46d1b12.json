{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\campaign\\\\CampaignView.tsx\",\n    _s = $RefreshSig$();\n\nimport { CampaignCalendarDataMessageEvent, CampaignCalendarDoorOpenedMessageEvent, OpenCampaignCalendarDoorAsStaffComposer, OpenCampaignCalendarDoorComposer } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, CalendarItem, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\nimport { useMessageEvent } from '../../hooks';\nimport { CalendarView } from './CalendarView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CampaignView = props => {\n  _s();\n\n  const [calendarData, setCalendarData] = useState(null);\n  const [lastOpenAttempt, setLastOpenAttempt] = useState(-1);\n  const [receivedProducts, setReceivedProducts] = useState(new Map());\n  const [isCalendarOpen, setCalendarOpen] = useState(false);\n  useMessageEvent(CampaignCalendarDataMessageEvent, event => {\n    const parser = event.getParser();\n    if (!parser) return;\n    setCalendarData(parser.calendarData);\n  });\n  useMessageEvent(CampaignCalendarDoorOpenedMessageEvent, event => {\n    const parser = event.getParser();\n    if (!parser) return;\n    const lastAttempt = lastOpenAttempt;\n\n    if (parser.doorOpened) {\n      setCalendarData(prev => {\n        const copy = prev.clone();\n        copy.openedDays.push(lastOpenAttempt);\n        return copy;\n      });\n      setReceivedProducts(prev => {\n        const copy = new Map(prev);\n        copy.set(lastAttempt, new CalendarItem(parser.productName, parser.customImage, parser.furnitureClassName));\n        return copy;\n      });\n    }\n\n    setLastOpenAttempt(-1);\n  });\n  const openPackage = useCallback(function (id) {\n    let asStaff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!calendarData) return;\n    setLastOpenAttempt(id);\n\n    if (asStaff) {\n      SendMessageComposer(new OpenCampaignCalendarDoorAsStaffComposer(calendarData.campaignName, id));\n    } else {\n      SendMessageComposer(new OpenCampaignCalendarDoorComposer(calendarData.campaignName, id));\n    }\n  }, [calendarData]);\n  const onCalendarClose = useCallback(() => {\n    setCalendarOpen(false);\n  }, []);\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const value = url.split('/');\n        if (value.length < 2) return;\n\n        switch (value[1]) {\n          case 'calendar':\n            setCalendarOpen(true);\n            break;\n        }\n      },\n      eventUrlPrefix: 'openView/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: calendarData && isCalendarOpen && /*#__PURE__*/_jsxDEV(CalendarView, {\n      onClose: onCalendarClose,\n      campaignName: calendarData.campaignName,\n      currentDay: calendarData.currentDay,\n      numDays: calendarData.campaignDays,\n      openedDays: calendarData.openedDays,\n      missedDays: calendarData.missedDays,\n      openPackage: openPackage,\n      receivedProducts: receivedProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CampaignView, \"IftLICUndqLZRdvSQIi1wAg4zLA=\", false, function () {\n  return [useMessageEvent, useMessageEvent];\n});\n\n_c = CampaignView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignView\");","map":{"version":3,"names":["CampaignCalendarDataMessageEvent","CampaignCalendarDoorOpenedMessageEvent","OpenCampaignCalendarDoorAsStaffComposer","OpenCampaignCalendarDoorComposer","useCallback","useEffect","useState","AddEventLinkTracker","CalendarItem","RemoveLinkEventTracker","SendMessageComposer","useMessageEvent","CalendarView","CampaignView","props","calendarData","setCalendarData","lastOpenAttempt","setLastOpenAttempt","receivedProducts","setReceivedProducts","Map","isCalendarOpen","setCalendarOpen","event","parser","getParser","lastAttempt","doorOpened","prev","copy","clone","openedDays","push","set","productName","customImage","furnitureClassName","openPackage","id","asStaff","campaignName","onCalendarClose","linkTracker","linkReceived","url","value","split","length","eventUrlPrefix","currentDay","campaignDays","missedDays"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/campaign/CampaignView.tsx"],"sourcesContent":["import { CampaignCalendarData, CampaignCalendarDataMessageEvent, CampaignCalendarDoorOpenedMessageEvent, ILinkEventTracker, OpenCampaignCalendarDoorAsStaffComposer, OpenCampaignCalendarDoorComposer } from '@nitrots/nitro-renderer';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { AddEventLinkTracker, CalendarItem, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\r\nimport { useMessageEvent } from '../../hooks';\r\nimport { CalendarView } from './CalendarView';\r\n\r\nexport const CampaignView: FC<{}> = props =>\r\n{\r\n    const [ calendarData, setCalendarData ] = useState<CampaignCalendarData>(null);\r\n    const [ lastOpenAttempt, setLastOpenAttempt ] = useState<number>(-1);\r\n    const [ receivedProducts, setReceivedProducts ] = useState<Map<number, CalendarItem>>(new Map());\r\n    const [ isCalendarOpen, setCalendarOpen ] = useState(false);\r\n\r\n    useMessageEvent<CampaignCalendarDataMessageEvent>(CampaignCalendarDataMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n        setCalendarData(parser.calendarData);\r\n    });\r\n\r\n    useMessageEvent<CampaignCalendarDoorOpenedMessageEvent>(CampaignCalendarDoorOpenedMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!parser) return;\r\n\r\n        const lastAttempt = lastOpenAttempt;\r\n\r\n        if(parser.doorOpened)\r\n        {\r\n            setCalendarData(prev => \r\n            {\r\n                const copy = prev.clone();\r\n                copy.openedDays.push(lastOpenAttempt);\r\n                    \r\n                return copy;\r\n            });\r\n    \r\n            setReceivedProducts(prev =>\r\n            {\r\n                const copy = new Map(prev);\r\n                copy.set(lastAttempt, new CalendarItem(parser.productName, parser.customImage,parser.furnitureClassName));\r\n                    \r\n                return copy;\r\n            });\r\n        }\r\n\r\n        setLastOpenAttempt(-1);\r\n    });\r\n\r\n    const openPackage = useCallback((id: number, asStaff = false) =>\r\n    {\r\n        if(!calendarData) return;\r\n\r\n        setLastOpenAttempt(id);\r\n\r\n        if(asStaff)\r\n        {\r\n            SendMessageComposer(new OpenCampaignCalendarDoorAsStaffComposer(calendarData.campaignName, id));\r\n        }\r\n\r\n        else\r\n        {\r\n            SendMessageComposer(new OpenCampaignCalendarDoorComposer(calendarData.campaignName, id));\r\n        }\r\n    }, [ calendarData ]);\r\n\r\n    const onCalendarClose = useCallback(() =>\r\n    {\r\n        setCalendarOpen(false);\r\n    }, []);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const linkTracker: ILinkEventTracker = {\r\n            linkReceived: (url: string) =>\r\n            {\r\n                const value = url.split('/');\r\n        \r\n                if(value.length < 2) return;\r\n        \r\n                switch(value[1])\r\n                {\r\n                    case 'calendar':\r\n                        setCalendarOpen(true);\r\n                        break;\r\n                }\r\n            },\r\n            eventUrlPrefix: 'openView/'\r\n        };\r\n\r\n        AddEventLinkTracker(linkTracker);\r\n\r\n        return () => RemoveLinkEventTracker(linkTracker);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            { (calendarData && isCalendarOpen) && \r\n                <CalendarView onClose={ onCalendarClose } campaignName={ calendarData.campaignName } currentDay={ calendarData.currentDay } numDays={ calendarData.campaignDays } openedDays={ calendarData.openedDays } missedDays={ calendarData.missedDays } openPackage={ openPackage } receivedProducts={ receivedProducts } />\r\n            }\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}