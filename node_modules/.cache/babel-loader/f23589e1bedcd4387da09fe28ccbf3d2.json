{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChiiO\\\\Desktop\\\\nitro-reactdev\\\\src\\\\components\\\\guide-tool\\\\GuideToolView.tsx\",\n    _s = $RefreshSig$();\n\nimport { GuideOnDutyStatusMessageEvent, GuideSessionAttachedMessageEvent, GuideSessionDetachedMessageEvent, GuideSessionEndedMessageEvent, GuideSessionInvitedToGuideRoomMessageEvent, GuideSessionMessageMessageEvent, GuideSessionOnDutyUpdateMessageComposer, GuideSessionPartnerIsTypingMessageEvent, GuideSessionStartedMessageEvent, PerkAllowancesMessageEvent, PerkEnum } from '@nitrots/nitro-renderer';\nimport { useCallback, useEffect, useState } from 'react';\nimport { AddEventLinkTracker, GetConfiguration, GetSessionDataManager, GuideSessionState, GuideToolMessage, GuideToolMessageGroup, LocalizeText, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView } from '../../common';\nimport { GuideToolEvent } from '../../events';\nimport { useMessageEvent, useNotification, useUiEvent } from '../../hooks';\nimport { GuideToolAcceptView } from './views/GuideToolAcceptView';\nimport { GuideToolMenuView } from './views/GuideToolMenuView';\nimport { GuideToolOngoingView } from './views/GuideToolOngoingView';\nimport { GuideToolUserCreateRequestView } from './views/GuideToolUserCreateRequestView';\nimport { GuideToolUserFeedbackView } from './views/GuideToolUserFeedbackView';\nimport { GuideToolUserPendingView } from './views/GuideToolUserPendingView';\nimport { GuideToolUserThanksView } from './views/GuideToolUserThanksView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GuideToolView = props => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [headerText, setHeaderText] = useState(LocalizeText('guide.help.guide.tool.title'));\n  const [noCloseButton, setNoCloseButton] = useState(false);\n  const [sessionState, setSessionState] = useState(GuideSessionState.GUIDE_TOOL_MENU);\n  const [isOnDuty, setIsOnDuty] = useState(false);\n  const [isHandlingBullyReports, setIsHandlingBullyReports] = useState(false);\n  const [isHandlingGuideRequests, setIsHandlingGuideRequests] = useState(false);\n  const [isHandlingHelpRequests, setIsHandlingHelpRequests] = useState(false);\n  const [helpersOnDuty, setHelpersOnDuty] = useState(0);\n  const [guidesOnDuty, setGuidesOnDuty] = useState(0);\n  const [guardiansOnDuty, setGuardiansOnDuty] = useState(0);\n  const [userRequest, setUserRequest] = useState('');\n  const [helpRequestDescription, setHelpRequestDescription] = useState(null);\n  const [helpRequestAverageTime, setHelpRequestAverageTime] = useState(0);\n  const [ongoingUserId, setOngoingUserId] = useState(0);\n  const [ongoingUsername, setOngoingUsername] = useState(null);\n  const [ongoingFigure, setOngoingFigure] = useState(null);\n  const [ongoingIsTyping, setOngoingIsTyping] = useState(false);\n  const [ongoingMessageGroups, setOngoingMessageGroups] = useState([]);\n  const {\n    simpleAlert = null\n  } = useNotification();\n  const updateSessionState = useCallback((newState, replacement) => {\n    switch (newState) {\n      case GuideSessionState.GUIDE_TOOL_MENU:\n        setHeaderText(LocalizeText('guide.help.guide.tool.title'));\n        setNoCloseButton(false);\n        break;\n\n      case GuideSessionState.GUIDE_ACCEPT:\n        setHeaderText(LocalizeText('guide.help.request.guide.accept.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.GUIDE_ONGOING:\n        setHeaderText(LocalizeText('guide.help.request.guide.ongoing.title', ['name'], [replacement]));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_CREATE:\n        setHeaderText(LocalizeText('guide.help.request.user.create.title'));\n        setNoCloseButton(false);\n        break;\n\n      case GuideSessionState.USER_PENDING:\n        setHeaderText(LocalizeText('guide.help.request.user.pending.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_ONGOING:\n        setHeaderText(LocalizeText('guide.help.request.user.ongoing.title', ['name'], [replacement]));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_FEEDBACK:\n        setHeaderText(LocalizeText('guide.help.request.user.feedback.title'));\n        setNoCloseButton(true);\n        break;\n\n      case GuideSessionState.USER_THANKS:\n        setHeaderText(LocalizeText('guide.help.request.user.thanks.title'));\n        setNoCloseButton(false);\n        break;\n    }\n\n    setSessionState(newState);\n    setIsVisible(true);\n  }, []);\n  const onGuideToolEvent = useCallback(event => {\n    switch (event.type) {\n      case GuideToolEvent.SHOW_GUIDE_TOOL:\n        setIsVisible(true);\n        return;\n\n      case GuideToolEvent.HIDE_GUIDE_TOOL:\n        setIsVisible(false);\n        return;\n\n      case GuideToolEvent.TOGGLE_GUIDE_TOOL:\n        setIsVisible(value => !value);\n        return;\n\n      case GuideToolEvent.CREATE_HELP_REQUEST:\n        updateSessionState(GuideSessionState.USER_CREATE);\n        return;\n    }\n  }, [updateSessionState]);\n  useUiEvent(GuideToolEvent.SHOW_GUIDE_TOOL, onGuideToolEvent);\n  useUiEvent(GuideToolEvent.HIDE_GUIDE_TOOL, onGuideToolEvent);\n  useUiEvent(GuideToolEvent.TOGGLE_GUIDE_TOOL, onGuideToolEvent);\n  useUiEvent(GuideToolEvent.CREATE_HELP_REQUEST, onGuideToolEvent);\n  useMessageEvent(PerkAllowancesMessageEvent, event => {\n    const parser = event.getParser();\n\n    if (!parser.isAllowed(PerkEnum.USE_GUIDE_TOOL) && isOnDuty) {\n      setIsOnDuty(false);\n      SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(false, false, false, false));\n    }\n  });\n  useMessageEvent(GuideOnDutyStatusMessageEvent, event => {\n    const parser = event.getParser();\n    setIsOnDuty(parser.onDuty);\n    setGuidesOnDuty(parser.guidesOnDuty);\n    setHelpersOnDuty(parser.helpersOnDuty);\n    setGuardiansOnDuty(parser.guardiansOnDuty);\n  });\n  useMessageEvent(GuideSessionAttachedMessageEvent, event => {\n    const parser = event.getParser();\n    setHelpRequestDescription(parser.helpRequestDescription);\n    setHelpRequestAverageTime(parser.roleSpecificWaitTime);\n    if (parser.asGuide && isOnDuty) updateSessionState(GuideSessionState.GUIDE_ACCEPT);\n    if (!parser.asGuide) updateSessionState(GuideSessionState.USER_PENDING);\n  });\n  useMessageEvent(GuideSessionStartedMessageEvent, event => {\n    const parser = event.getParser();\n\n    if (isOnDuty) {\n      setOngoingUserId(parser.requesterUserId);\n      setOngoingUsername(parser.requesterName);\n      setOngoingFigure(parser.requesterFigure);\n      updateSessionState(GuideSessionState.GUIDE_ONGOING, parser.requesterName);\n    } else {\n      setOngoingUserId(parser.guideUserId);\n      setOngoingUsername(parser.guideName);\n      setOngoingFigure(parser.guideFigure);\n      updateSessionState(GuideSessionState.USER_ONGOING, parser.guideName);\n    }\n  });\n  useMessageEvent(GuideSessionPartnerIsTypingMessageEvent, event => {\n    const parser = event.getParser();\n    setOngoingIsTyping(parser.isTyping);\n  });\n  useMessageEvent(GuideSessionMessageMessageEvent, event => {\n    const parser = event.getParser();\n    const messageGroups = [...ongoingMessageGroups];\n    let lastGroup = messageGroups[messageGroups.length - 1];\n\n    if (!lastGroup || lastGroup.userId !== parser.senderId) {\n      lastGroup = new GuideToolMessageGroup(parser.senderId);\n      messageGroups.push(lastGroup);\n    }\n\n    lastGroup.addChat(new GuideToolMessage(parser.chatMessage));\n    setOngoingMessageGroups(messageGroups);\n  });\n  useMessageEvent(GuideSessionInvitedToGuideRoomMessageEvent, event => {\n    const parser = event.getParser();\n    const messageGroups = [...ongoingMessageGroups];\n    let lastGroup = messageGroups[messageGroups.length - 1];\n    const guideId = isOnDuty ? GetSessionDataManager().userId : ongoingUserId;\n\n    if (!lastGroup || lastGroup.userId !== guideId) {\n      lastGroup = new GuideToolMessageGroup(guideId);\n      messageGroups.push(lastGroup);\n    }\n\n    lastGroup.addChat(new GuideToolMessage(parser.roomName, parser.roomId));\n    setOngoingMessageGroups(messageGroups);\n  });\n  useMessageEvent(GuideSessionEndedMessageEvent, event => {\n    if (isOnDuty) {\n      setOngoingUserId(0);\n      setOngoingUsername(null);\n      setOngoingFigure(null);\n      setOngoingIsTyping(false);\n      setOngoingMessageGroups([]);\n      updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n    } else {\n      updateSessionState(GuideSessionState.USER_FEEDBACK);\n    }\n  });\n  useMessageEvent(GuideSessionDetachedMessageEvent, event => {\n    setOngoingUserId(0);\n    setOngoingUsername(null);\n    setOngoingFigure(null);\n    setOngoingIsTyping(false);\n    setOngoingMessageGroups([]);\n\n    if (isOnDuty) {\n      updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n    } else {\n      updateSessionState(GuideSessionState.USER_THANKS);\n    }\n  });\n  useEffect(() => {\n    const linkTracker = {\n      linkReceived: url => {\n        const parts = url.split('/');\n        if (parts.length < 2) return;\n\n        switch (parts[1]) {\n          case 'tour':\n            //Create Tour Request\n            return;\n        }\n      },\n      eventUrlPrefix: 'help/'\n    };\n    AddEventLinkTracker(linkTracker);\n    return () => RemoveLinkEventTracker(linkTracker);\n  }, []);\n  const processAction = useCallback(action => {\n    switch (action) {\n      case 'close':\n        setIsVisible(false);\n        setUserRequest('');\n        setSessionState(GuideSessionState.GUIDE_TOOL_MENU);\n        return;\n\n      case 'toggle_duty':\n        if (!isHandlingBullyReports && !isHandlingGuideRequests && !isHandlingHelpRequests) {\n          simpleAlert(LocalizeText('guide.help.guide.tool.noqueueselected.message'), null, null, null, LocalizeText('guide.help.guide.tool.noqueueselected.caption'), null);\n          return;\n        }\n\n        setIsOnDuty(v => {\n          SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(!v, v ? false : isHandlingGuideRequests, v ? false : isHandlingHelpRequests, v ? false : isHandlingBullyReports));\n          return !v;\n        });\n        return;\n\n      case 'forum_link':\n        const url = GetConfiguration('group.homepage.url', '').replace('%groupid%', GetConfiguration('guide.help.alpha.groupid', '0'));\n        window.open(url);\n        return;\n    }\n  }, [isHandlingBullyReports, isHandlingGuideRequests, isHandlingHelpRequests, simpleAlert]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(NitroCardView, {\n    className: \"nitro-guide-tool\",\n    theme: \"primary-slim\",\n    children: [/*#__PURE__*/_jsxDEV(NitroCardHeaderView, {\n      headerText: headerText,\n      onCloseClick: event => processAction('close'),\n      noCloseButton: noCloseButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NitroCardContentView, {\n      className: \"text-black\",\n      children: [sessionState === GuideSessionState.GUIDE_TOOL_MENU && /*#__PURE__*/_jsxDEV(GuideToolMenuView, {\n        isOnDuty: isOnDuty,\n        isHandlingGuideRequests: isHandlingGuideRequests,\n        setIsHandlingGuideRequests: setIsHandlingGuideRequests,\n        isHandlingHelpRequests: isHandlingHelpRequests,\n        setIsHandlingHelpRequests: setIsHandlingHelpRequests,\n        isHandlingBullyReports: isHandlingBullyReports,\n        setIsHandlingBullyReports: setIsHandlingBullyReports,\n        guidesOnDuty: guidesOnDuty,\n        helpersOnDuty: helpersOnDuty,\n        guardiansOnDuty: guardiansOnDuty,\n        processAction: processAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.GUIDE_ACCEPT && /*#__PURE__*/_jsxDEV(GuideToolAcceptView, {\n        helpRequestDescription: helpRequestDescription,\n        helpRequestAverageTime: helpRequestAverageTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this), [GuideSessionState.GUIDE_ONGOING, GuideSessionState.USER_ONGOING].includes(sessionState) && /*#__PURE__*/_jsxDEV(GuideToolOngoingView, {\n        isGuide: isOnDuty,\n        userId: ongoingUserId,\n        userName: ongoingUsername,\n        userFigure: ongoingFigure,\n        isTyping: ongoingIsTyping,\n        messageGroups: ongoingMessageGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_CREATE && /*#__PURE__*/_jsxDEV(GuideToolUserCreateRequestView, {\n        userRequest: userRequest,\n        setUserRequest: setUserRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_PENDING && /*#__PURE__*/_jsxDEV(GuideToolUserPendingView, {\n        helpRequestDescription: helpRequestDescription,\n        helpRequestAverageTime: helpRequestAverageTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_FEEDBACK && /*#__PURE__*/_jsxDEV(GuideToolUserFeedbackView, {\n        userName: ongoingUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this), sessionState === GuideSessionState.USER_THANKS && /*#__PURE__*/_jsxDEV(GuideToolUserThanksView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GuideToolView, \"/SXY1g4AmDeZ/l5K5ZXg8Suy8RM=\", false, function () {\n  return [useNotification, useUiEvent, useUiEvent, useUiEvent, useUiEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent, useMessageEvent];\n});\n\n_c = GuideToolView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuideToolView\");","map":{"version":3,"names":["GuideOnDutyStatusMessageEvent","GuideSessionAttachedMessageEvent","GuideSessionDetachedMessageEvent","GuideSessionEndedMessageEvent","GuideSessionInvitedToGuideRoomMessageEvent","GuideSessionMessageMessageEvent","GuideSessionOnDutyUpdateMessageComposer","GuideSessionPartnerIsTypingMessageEvent","GuideSessionStartedMessageEvent","PerkAllowancesMessageEvent","PerkEnum","useCallback","useEffect","useState","AddEventLinkTracker","GetConfiguration","GetSessionDataManager","GuideSessionState","GuideToolMessage","GuideToolMessageGroup","LocalizeText","RemoveLinkEventTracker","SendMessageComposer","NitroCardContentView","NitroCardHeaderView","NitroCardView","GuideToolEvent","useMessageEvent","useNotification","useUiEvent","GuideToolAcceptView","GuideToolMenuView","GuideToolOngoingView","GuideToolUserCreateRequestView","GuideToolUserFeedbackView","GuideToolUserPendingView","GuideToolUserThanksView","GuideToolView","props","isVisible","setIsVisible","headerText","setHeaderText","noCloseButton","setNoCloseButton","sessionState","setSessionState","GUIDE_TOOL_MENU","isOnDuty","setIsOnDuty","isHandlingBullyReports","setIsHandlingBullyReports","isHandlingGuideRequests","setIsHandlingGuideRequests","isHandlingHelpRequests","setIsHandlingHelpRequests","helpersOnDuty","setHelpersOnDuty","guidesOnDuty","setGuidesOnDuty","guardiansOnDuty","setGuardiansOnDuty","userRequest","setUserRequest","helpRequestDescription","setHelpRequestDescription","helpRequestAverageTime","setHelpRequestAverageTime","ongoingUserId","setOngoingUserId","ongoingUsername","setOngoingUsername","ongoingFigure","setOngoingFigure","ongoingIsTyping","setOngoingIsTyping","ongoingMessageGroups","setOngoingMessageGroups","simpleAlert","updateSessionState","newState","replacement","GUIDE_ACCEPT","GUIDE_ONGOING","USER_CREATE","USER_PENDING","USER_ONGOING","USER_FEEDBACK","USER_THANKS","onGuideToolEvent","event","type","SHOW_GUIDE_TOOL","HIDE_GUIDE_TOOL","TOGGLE_GUIDE_TOOL","value","CREATE_HELP_REQUEST","parser","getParser","isAllowed","USE_GUIDE_TOOL","onDuty","roleSpecificWaitTime","asGuide","requesterUserId","requesterName","requesterFigure","guideUserId","guideName","guideFigure","isTyping","messageGroups","lastGroup","length","userId","senderId","push","addChat","chatMessage","guideId","roomName","roomId","linkTracker","linkReceived","url","parts","split","eventUrlPrefix","processAction","action","v","replace","window","open","includes"],"sources":["C:/Users/ChiiO/Desktop/nitro-reactdev/src/components/guide-tool/GuideToolView.tsx"],"sourcesContent":["import { GuideOnDutyStatusMessageEvent, GuideSessionAttachedMessageEvent, GuideSessionDetachedMessageEvent, GuideSessionEndedMessageEvent, GuideSessionInvitedToGuideRoomMessageEvent, GuideSessionMessageMessageEvent, GuideSessionOnDutyUpdateMessageComposer, GuideSessionPartnerIsTypingMessageEvent, GuideSessionStartedMessageEvent, ILinkEventTracker, PerkAllowancesMessageEvent, PerkEnum } from '@nitrots/nitro-renderer';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { AddEventLinkTracker, GetConfiguration, GetSessionDataManager, GuideSessionState, GuideToolMessage, GuideToolMessageGroup, LocalizeText, RemoveLinkEventTracker, SendMessageComposer } from '../../api';\r\nimport { NitroCardContentView, NitroCardHeaderView, NitroCardView } from '../../common';\r\nimport { GuideToolEvent } from '../../events';\r\nimport { useMessageEvent, useNotification, useUiEvent } from '../../hooks';\r\nimport { GuideToolAcceptView } from './views/GuideToolAcceptView';\r\nimport { GuideToolMenuView } from './views/GuideToolMenuView';\r\nimport { GuideToolOngoingView } from './views/GuideToolOngoingView';\r\nimport { GuideToolUserCreateRequestView } from './views/GuideToolUserCreateRequestView';\r\nimport { GuideToolUserFeedbackView } from './views/GuideToolUserFeedbackView';\r\nimport { GuideToolUserPendingView } from './views/GuideToolUserPendingView';\r\nimport { GuideToolUserThanksView } from './views/GuideToolUserThanksView';\r\n\r\nexport const GuideToolView: FC<{}> = props =>\r\n{\r\n    const [ isVisible, setIsVisible ] = useState<boolean>(false);\r\n    const [ headerText, setHeaderText ] = useState<string>(LocalizeText('guide.help.guide.tool.title'));\r\n    const [ noCloseButton, setNoCloseButton ] = useState<boolean>(false);\r\n    const [ sessionState, setSessionState ] = useState<string>(GuideSessionState.GUIDE_TOOL_MENU);\r\n\r\n    const [ isOnDuty, setIsOnDuty ] = useState<boolean>(false);\r\n    const [ isHandlingBullyReports, setIsHandlingBullyReports ] = useState<boolean>(false);\r\n    const [ isHandlingGuideRequests, setIsHandlingGuideRequests ] = useState<boolean>(false);\r\n    const [ isHandlingHelpRequests, setIsHandlingHelpRequests ] = useState<boolean>(false);\r\n\r\n    const [ helpersOnDuty, setHelpersOnDuty ] = useState<number>(0);\r\n    const [ guidesOnDuty, setGuidesOnDuty ] = useState<number>(0);\r\n    const [ guardiansOnDuty, setGuardiansOnDuty ] = useState<number>(0);\r\n\r\n    const [ userRequest, setUserRequest ] = useState<string>('');\r\n\r\n    const [ helpRequestDescription, setHelpRequestDescription ] = useState<string>(null);\r\n    const [ helpRequestAverageTime, setHelpRequestAverageTime ] = useState<number>(0);\r\n\r\n    const [ ongoingUserId, setOngoingUserId ] = useState<number>(0);\r\n    const [ ongoingUsername, setOngoingUsername ] = useState<string>(null);\r\n    const [ ongoingFigure, setOngoingFigure ] = useState<string>(null);\r\n    const [ ongoingIsTyping, setOngoingIsTyping ] = useState<boolean>(false);\r\n    const [ ongoingMessageGroups, setOngoingMessageGroups ] = useState<GuideToolMessageGroup[]>([]);\r\n\r\n    const { simpleAlert = null } = useNotification();\r\n\r\n    const updateSessionState = useCallback((newState: string, replacement?: string) =>\r\n    {\r\n        switch(newState)\r\n        {\r\n            case GuideSessionState.GUIDE_TOOL_MENU:\r\n                setHeaderText(LocalizeText('guide.help.guide.tool.title'));\r\n                setNoCloseButton(false);\r\n                break;\r\n            case GuideSessionState.GUIDE_ACCEPT:\r\n                setHeaderText(LocalizeText('guide.help.request.guide.accept.title'));\r\n                setNoCloseButton(true);\r\n                break;\r\n            case GuideSessionState.GUIDE_ONGOING:\r\n                setHeaderText(LocalizeText('guide.help.request.guide.ongoing.title', [ 'name' ], [ replacement ]));\r\n                setNoCloseButton(true);\r\n                break;\r\n            case GuideSessionState.USER_CREATE:\r\n                setHeaderText(LocalizeText('guide.help.request.user.create.title'));\r\n                setNoCloseButton(false);\r\n                break;\r\n            case GuideSessionState.USER_PENDING:\r\n                setHeaderText(LocalizeText('guide.help.request.user.pending.title'));\r\n                setNoCloseButton(true);\r\n                break;\r\n            case GuideSessionState.USER_ONGOING:\r\n                setHeaderText(LocalizeText('guide.help.request.user.ongoing.title', [ 'name' ], [ replacement ]));\r\n                setNoCloseButton(true);\r\n                break;\r\n            case GuideSessionState.USER_FEEDBACK:\r\n                setHeaderText(LocalizeText('guide.help.request.user.feedback.title'));\r\n                setNoCloseButton(true);\r\n                break;\r\n            case GuideSessionState.USER_THANKS:\r\n                setHeaderText(LocalizeText('guide.help.request.user.thanks.title'));\r\n                setNoCloseButton(false);\r\n                break;\r\n        }\r\n\r\n        setSessionState(newState);\r\n        setIsVisible(true);\r\n    }, []);\r\n\r\n    const onGuideToolEvent = useCallback((event: GuideToolEvent) =>\r\n    {\r\n        switch(event.type)\r\n        {\r\n            case GuideToolEvent.SHOW_GUIDE_TOOL:\r\n                setIsVisible(true);\r\n                return;\r\n            case GuideToolEvent.HIDE_GUIDE_TOOL:\r\n                setIsVisible(false);\r\n                return;   \r\n            case GuideToolEvent.TOGGLE_GUIDE_TOOL:\r\n                setIsVisible(value => !value);\r\n                return;\r\n            case GuideToolEvent.CREATE_HELP_REQUEST:\r\n                updateSessionState(GuideSessionState.USER_CREATE);\r\n                return;\r\n        }\r\n    }, [ updateSessionState ]);\r\n\r\n    useUiEvent(GuideToolEvent.SHOW_GUIDE_TOOL, onGuideToolEvent);\r\n    useUiEvent(GuideToolEvent.HIDE_GUIDE_TOOL, onGuideToolEvent);\r\n    useUiEvent(GuideToolEvent.TOGGLE_GUIDE_TOOL, onGuideToolEvent);\r\n    useUiEvent(GuideToolEvent.CREATE_HELP_REQUEST, onGuideToolEvent);\r\n\r\n    useMessageEvent<PerkAllowancesMessageEvent>(PerkAllowancesMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(!parser.isAllowed(PerkEnum.USE_GUIDE_TOOL) && isOnDuty)\r\n        {\r\n            setIsOnDuty(false);\r\n            SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(false, false, false, false));\r\n        }\r\n    });\r\n\r\n    useMessageEvent<GuideOnDutyStatusMessageEvent>(GuideOnDutyStatusMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        setIsOnDuty(parser.onDuty);\r\n        setGuidesOnDuty(parser.guidesOnDuty);\r\n        setHelpersOnDuty(parser.helpersOnDuty);\r\n        setGuardiansOnDuty(parser.guardiansOnDuty);\r\n    });\r\n\r\n    useMessageEvent<GuideSessionAttachedMessageEvent>(GuideSessionAttachedMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        setHelpRequestDescription(parser.helpRequestDescription);\r\n        setHelpRequestAverageTime(parser.roleSpecificWaitTime);\r\n\r\n        if(parser.asGuide && isOnDuty) updateSessionState(GuideSessionState.GUIDE_ACCEPT);\r\n        \r\n        if(!parser.asGuide) updateSessionState(GuideSessionState.USER_PENDING);\r\n    });\r\n\r\n    useMessageEvent<GuideSessionStartedMessageEvent>(GuideSessionStartedMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        if(isOnDuty)\r\n        {\r\n            setOngoingUserId(parser.requesterUserId);\r\n            setOngoingUsername(parser.requesterName);\r\n            setOngoingFigure(parser.requesterFigure);\r\n            updateSessionState(GuideSessionState.GUIDE_ONGOING, parser.requesterName);\r\n        }\r\n        else\r\n        {\r\n            setOngoingUserId(parser.guideUserId);\r\n            setOngoingUsername(parser.guideName);\r\n            setOngoingFigure(parser.guideFigure);\r\n            updateSessionState(GuideSessionState.USER_ONGOING, parser.guideName);\r\n        }\r\n    });\r\n\r\n    useMessageEvent<GuideSessionPartnerIsTypingMessageEvent>(GuideSessionPartnerIsTypingMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        setOngoingIsTyping(parser.isTyping);\r\n    });\r\n\r\n    useMessageEvent<GuideSessionMessageMessageEvent>(GuideSessionMessageMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        const messageGroups = [ ...ongoingMessageGroups ];\r\n\r\n        let lastGroup = messageGroups[messageGroups.length - 1];\r\n\r\n        if(!lastGroup || lastGroup.userId !== parser.senderId)\r\n        {\r\n            lastGroup = new GuideToolMessageGroup(parser.senderId);\r\n            messageGroups.push(lastGroup);\r\n        }\r\n\r\n        lastGroup.addChat(new GuideToolMessage(parser.chatMessage));\r\n        setOngoingMessageGroups(messageGroups);\r\n    });\r\n\r\n    useMessageEvent<GuideSessionInvitedToGuideRoomMessageEvent>(GuideSessionInvitedToGuideRoomMessageEvent, event =>\r\n    {\r\n        const parser = event.getParser();\r\n\r\n        const messageGroups = [ ...ongoingMessageGroups ];\r\n\r\n        let lastGroup = messageGroups[messageGroups.length - 1];\r\n\r\n        const guideId = (isOnDuty ? GetSessionDataManager().userId : ongoingUserId);\r\n\r\n        if(!lastGroup || lastGroup.userId !== guideId)\r\n        {\r\n            lastGroup = new GuideToolMessageGroup(guideId);\r\n            messageGroups.push(lastGroup);\r\n        }\r\n\r\n        lastGroup.addChat(new GuideToolMessage(parser.roomName, parser.roomId));\r\n        setOngoingMessageGroups(messageGroups);\r\n    });\r\n\r\n    useMessageEvent<GuideSessionEndedMessageEvent>(GuideSessionEndedMessageEvent, event =>\r\n    {\r\n        if(isOnDuty)\r\n        {\r\n            setOngoingUserId(0);\r\n            setOngoingUsername(null);\r\n            setOngoingFigure(null);\r\n            setOngoingIsTyping(false);\r\n            setOngoingMessageGroups([]);\r\n            updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\r\n        }\r\n        else\r\n        {\r\n            updateSessionState(GuideSessionState.USER_FEEDBACK);\r\n        }\r\n    });\r\n\r\n    useMessageEvent<GuideSessionDetachedMessageEvent>(GuideSessionDetachedMessageEvent, event =>\r\n    {\r\n        setOngoingUserId(0);\r\n        setOngoingUsername(null);\r\n        setOngoingFigure(null);\r\n        setOngoingIsTyping(false);\r\n        setOngoingMessageGroups([]);\r\n\r\n        if(isOnDuty)\r\n        {\r\n            \r\n            updateSessionState(GuideSessionState.GUIDE_TOOL_MENU);\r\n        }\r\n        else\r\n        {\r\n            updateSessionState(GuideSessionState.USER_THANKS);\r\n        }\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        const linkTracker: ILinkEventTracker = {\r\n            linkReceived: (url: string) =>\r\n            {\r\n                const parts = url.split('/');\r\n        \r\n                if(parts.length < 2) return;\r\n        \r\n                switch(parts[1])\r\n                {\r\n                    case 'tour':\r\n                    //Create Tour Request\r\n                        return;\r\n                }\r\n            },\r\n            eventUrlPrefix: 'help/'\r\n        };\r\n\r\n        AddEventLinkTracker(linkTracker);\r\n\r\n        return () => RemoveLinkEventTracker(linkTracker);\r\n    }, []);\r\n\r\n    const processAction = useCallback((action: string) =>\r\n    {\r\n        switch(action)\r\n        {\r\n            case 'close':\r\n                setIsVisible(false);\r\n                setUserRequest('');\r\n                setSessionState(GuideSessionState.GUIDE_TOOL_MENU);\r\n                return;\r\n            case 'toggle_duty':\r\n                if(!isHandlingBullyReports && !isHandlingGuideRequests && !isHandlingHelpRequests)\r\n                {\r\n                    simpleAlert(LocalizeText('guide.help.guide.tool.noqueueselected.message'), null, null, null, LocalizeText('guide.help.guide.tool.noqueueselected.caption'), null);\r\n                    return;\r\n                }\r\n\r\n                setIsOnDuty(v =>\r\n                {\r\n                    SendMessageComposer(new GuideSessionOnDutyUpdateMessageComposer(!v, v ? false : isHandlingGuideRequests, v ? false : isHandlingHelpRequests, v ? false : isHandlingBullyReports));\r\n                    return !v;\r\n                });\r\n                \r\n                return;\r\n            case 'forum_link':\r\n                const url: string = GetConfiguration<string>('group.homepage.url', '').replace('%groupid%', GetConfiguration<string>('guide.help.alpha.groupid', '0'));\r\n                window.open(url);\r\n                return;\r\n        }\r\n    }, [ isHandlingBullyReports, isHandlingGuideRequests, isHandlingHelpRequests, simpleAlert ]);\r\n\r\n    if(!isVisible) return null;\r\n\r\n    return (\r\n        <NitroCardView className=\"nitro-guide-tool\" theme=\"primary-slim\">\r\n            <NitroCardHeaderView headerText={ headerText } onCloseClick={ event => processAction('close') } noCloseButton={ noCloseButton } />\r\n            <NitroCardContentView className=\"text-black\">\r\n                { (sessionState === GuideSessionState.GUIDE_TOOL_MENU) &&\r\n                    <GuideToolMenuView isOnDuty={ isOnDuty } isHandlingGuideRequests={ isHandlingGuideRequests } setIsHandlingGuideRequests={ setIsHandlingGuideRequests } isHandlingHelpRequests={ isHandlingHelpRequests } setIsHandlingHelpRequests={ setIsHandlingHelpRequests } isHandlingBullyReports={ isHandlingBullyReports } setIsHandlingBullyReports={ setIsHandlingBullyReports } guidesOnDuty={ guidesOnDuty } helpersOnDuty={ helpersOnDuty } guardiansOnDuty={ guardiansOnDuty } processAction={ processAction } /> } \r\n                { (sessionState === GuideSessionState.GUIDE_ACCEPT) &&\r\n                    <GuideToolAcceptView helpRequestDescription={ helpRequestDescription } helpRequestAverageTime={ helpRequestAverageTime } /> }\r\n                { [ GuideSessionState.GUIDE_ONGOING, GuideSessionState.USER_ONGOING ].includes(sessionState) &&\r\n                    <GuideToolOngoingView isGuide={ isOnDuty } userId={ ongoingUserId } userName={ ongoingUsername } userFigure={ ongoingFigure } isTyping={ ongoingIsTyping } messageGroups={ ongoingMessageGroups } /> }\r\n                { (sessionState === GuideSessionState.USER_CREATE) &&\r\n                    <GuideToolUserCreateRequestView userRequest={ userRequest } setUserRequest={ setUserRequest } /> }\r\n                { (sessionState === GuideSessionState.USER_PENDING) &&\r\n                    <GuideToolUserPendingView helpRequestDescription={ helpRequestDescription } helpRequestAverageTime={ helpRequestAverageTime } /> }\r\n                { (sessionState === GuideSessionState.USER_FEEDBACK) &&\r\n                    <GuideToolUserFeedbackView userName={ ongoingUsername } /> }\r\n                { (sessionState === GuideSessionState.USER_THANKS) &&\r\n                    <GuideToolUserThanksView /> }\r\n            </NitroCardContentView>\r\n        </NitroCardView>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}